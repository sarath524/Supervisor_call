
SVC_Number.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001344  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a4  080014d4  080014d4  000114d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001578  08001578  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001578  08001578  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001578  08001578  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001578  08001578  00011578  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800157c  0800157c  0001157c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001580  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000ac1  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000003c3  00000000  00000000  00020b90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000140  00000000  00000000  00020f58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000dd  00000000  00000000  00021098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c89  00000000  00000000  00021175  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001501  00000000  00000000  00023dfe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00009752  00000000  00000000  000252ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000bf4  00000000  00000000  0002ea54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000050  00000000  00000000  0002f648  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080014bc 	.word	0x080014bc

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080014bc 	.word	0x080014bc

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <add>:
#include <stdio.h>
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int32_t add(int32_t a, int32_t b){
 8000270:	b480      	push	{r7}
 8000272:	b085      	sub	sp, #20
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
 8000278:	6039      	str	r1, [r7, #0]

	int32_t res;
	__asm volatile("SVC #30");// triggers the svs handler with imm. value
 800027a:	df1e      	svc	30
	__asm  volatile("MOV %0,R0": "=r"(res) ::);// this instruction moves the R0 value to the res variable
 800027c:	4603      	mov	r3, r0
 800027e:	60fb      	str	r3, [r7, #12]
	return res;
 8000280:	68fb      	ldr	r3, [r7, #12]
}
 8000282:	4618      	mov	r0, r3
 8000284:	3714      	adds	r7, #20
 8000286:	46bd      	mov	sp, r7
 8000288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800028c:	4770      	bx	lr

0800028e <sub>:
int32_t sub(int32_t a, int32_t b){
 800028e:	b480      	push	{r7}
 8000290:	b085      	sub	sp, #20
 8000292:	af00      	add	r7, sp, #0
 8000294:	6078      	str	r0, [r7, #4]
 8000296:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile("SVC #32");
 8000298:	df20      	svc	32
	__asm volatile ("MOV %0,R0": "=r"(res) ::);
 800029a:	4603      	mov	r3, r0
 800029c:	60fb      	str	r3, [r7, #12]
	return res;
 800029e:	68fb      	ldr	r3, [r7, #12]

}
 80002a0:	4618      	mov	r0, r3
 80002a2:	3714      	adds	r7, #20
 80002a4:	46bd      	mov	sp, r7
 80002a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002aa:	4770      	bx	lr

080002ac <mul>:
int32_t mul(int32_t a, int32_t b){
 80002ac:	b480      	push	{r7}
 80002ae:	b085      	sub	sp, #20
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
 80002b4:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile("SVC #33");
 80002b6:	df21      	svc	33	; 0x21
	__asm  ("MOV %0,R0": "=r"(res) ::);
 80002b8:	4603      	mov	r3, r0
 80002ba:	60fb      	str	r3, [r7, #12]
	return res;
 80002bc:	68fb      	ldr	r3, [r7, #12]

}
 80002be:	4618      	mov	r0, r3
 80002c0:	3714      	adds	r7, #20
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr

080002ca <div>:
int32_t div(int32_t a, int32_t b){
 80002ca:	b480      	push	{r7}
 80002cc:	b085      	sub	sp, #20
 80002ce:	af00      	add	r7, sp, #0
 80002d0:	6078      	str	r0, [r7, #4]
 80002d2:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile("SVC #34");
 80002d4:	df22      	svc	34	; 0x22
	__asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002d6:	4603      	mov	r3, r0
 80002d8:	60fb      	str	r3, [r7, #12]
	return res;
 80002da:	68fb      	ldr	r3, [r7, #12]

}
 80002dc:	4618      	mov	r0, r3
 80002de:	3714      	adds	r7, #20
 80002e0:	46bd      	mov	sp, r7
 80002e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e6:	4770      	bx	lr

080002e8 <main>:



int main(void)
{
 80002e8:	b580      	push	{r7, lr}
 80002ea:	b082      	sub	sp, #8
 80002ec:	af00      	add	r7, sp, #0
    /* Loop forever */
    int32_t res;

    res = add(40, -90);// (R0,R1)// calls the add functions arguments passed.
 80002ee:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80002f2:	2028      	movs	r0, #40	; 0x28
 80002f4:	f7ff ffbc 	bl	8000270 <add>
 80002f8:	6078      	str	r0, [r7, #4]
    printf("Add result = %ld\n",res);
 80002fa:	6879      	ldr	r1, [r7, #4]
 80002fc:	4810      	ldr	r0, [pc, #64]	; (8000340 <main+0x58>)
 80002fe:	f000 fa0d 	bl	800071c <iprintf>

    res = sub(25,150);
 8000302:	2196      	movs	r1, #150	; 0x96
 8000304:	2019      	movs	r0, #25
 8000306:	f7ff ffc2 	bl	800028e <sub>
 800030a:	6078      	str	r0, [r7, #4]
    printf("Sub result = %ld\n",res);
 800030c:	6879      	ldr	r1, [r7, #4]
 800030e:	480d      	ldr	r0, [pc, #52]	; (8000344 <main+0x5c>)
 8000310:	f000 fa04 	bl	800071c <iprintf>

    res = mul(374,890);
 8000314:	f240 317a 	movw	r1, #890	; 0x37a
 8000318:	f44f 70bb 	mov.w	r0, #374	; 0x176
 800031c:	f7ff ffc6 	bl	80002ac <mul>
 8000320:	6078      	str	r0, [r7, #4]
    printf("mul result = %ld\n", res);
 8000322:	6879      	ldr	r1, [r7, #4]
 8000324:	4808      	ldr	r0, [pc, #32]	; (8000348 <main+0x60>)
 8000326:	f000 f9f9 	bl	800071c <iprintf>

    res = div(67,-3);
 800032a:	f06f 0102 	mvn.w	r1, #2
 800032e:	2043      	movs	r0, #67	; 0x43
 8000330:	f7ff ffcb 	bl	80002ca <div>
 8000334:	6078      	str	r0, [r7, #4]
    printf("div result = %ld\n",res);
 8000336:	6879      	ldr	r1, [r7, #4]
 8000338:	4804      	ldr	r0, [pc, #16]	; (800034c <main+0x64>)
 800033a:	f000 f9ef 	bl	800071c <iprintf>





	for(;;);
 800033e:	e7fe      	b.n	800033e <main+0x56>
 8000340:	080014d4 	.word	0x080014d4
 8000344:	080014e8 	.word	0x080014e8
 8000348:	080014fc 	.word	0x080014fc
 800034c:	08001510 	.word	0x08001510

08000350 <SVC_Handler>:
}
__attribute ((naked)) void SVC_Handler(){

	__asm volatile ("MRS R0, MSP");// Reads the MSP base address and stores the value into R0
 8000350:	f3ef 8008 	mrs	r0, MSP
	__asm volatile ("B SVC_Handler_c");
 8000354:	f000 b802 	b.w	800035c <SVC_Handler_c>


}
 8000358:	bf00      	nop
	...

0800035c <SVC_Handler_c>:


void SVC_Handler_c(uint32_t *pMSP_base_addr)
{
 800035c:	b580      	push	{r7, lr}
 800035e:	b088      	sub	sp, #32
 8000360:	af00      	add	r7, sp, #0
 8000362:	6078      	str	r0, [r7, #4]

	int32_t arg0, arg1, res;
	printf(" svc_handler triggered \n");
 8000364:	4823      	ldr	r0, [pc, #140]	; (80003f4 <SVC_Handler_c+0x98>)
 8000366:	f000 fa3f 	bl	80007e8 <puts>
	uint8_t *pc_add = (uint8_t*)pMSP_base_addr[6];//
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	3318      	adds	r3, #24
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	61bb      	str	r3, [r7, #24]
	pc_add -=2;
 8000372:	69bb      	ldr	r3, [r7, #24]
 8000374:	3b02      	subs	r3, #2
 8000376:	61bb      	str	r3, [r7, #24]
	uint8_t svs_number = *pc_add;
 8000378:	69bb      	ldr	r3, [r7, #24]
 800037a:	781b      	ldrb	r3, [r3, #0]
 800037c:	75fb      	strb	r3, [r7, #23]
	printf("data %d", svs_number );
 800037e:	7dfb      	ldrb	r3, [r7, #23]
 8000380:	4619      	mov	r1, r3
 8000382:	481d      	ldr	r0, [pc, #116]	; (80003f8 <SVC_Handler_c+0x9c>)
 8000384:	f000 f9ca 	bl	800071c <iprintf>

	arg0 = pMSP_base_addr[0];
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	613b      	str	r3, [r7, #16]
	arg1 = pMSP_base_addr[1];
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	3304      	adds	r3, #4
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	60fb      	str	r3, [r7, #12]
	switch(svs_number)
 8000396:	7dfb      	ldrb	r3, [r7, #23]
 8000398:	3b1e      	subs	r3, #30
 800039a:	2b04      	cmp	r3, #4
 800039c:	d822      	bhi.n	80003e4 <SVC_Handler_c+0x88>
 800039e:	a201      	add	r2, pc, #4	; (adr r2, 80003a4 <SVC_Handler_c+0x48>)
 80003a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003a4:	080003b9 	.word	0x080003b9
 80003a8:	080003e5 	.word	0x080003e5
 80003ac:	080003c3 	.word	0x080003c3
 80003b0:	080003cd 	.word	0x080003cd
 80003b4:	080003d9 	.word	0x080003d9
	{
	case 30:
		res = arg0 + arg1;
 80003b8:	693a      	ldr	r2, [r7, #16]
 80003ba:	68fb      	ldr	r3, [r7, #12]
 80003bc:	4413      	add	r3, r2
 80003be:	61fb      	str	r3, [r7, #28]
		break;
 80003c0:	e010      	b.n	80003e4 <SVC_Handler_c+0x88>
	case 32:
		res = arg0 - arg1;
 80003c2:	693a      	ldr	r2, [r7, #16]
 80003c4:	68fb      	ldr	r3, [r7, #12]
 80003c6:	1ad3      	subs	r3, r2, r3
 80003c8:	61fb      	str	r3, [r7, #28]
		break;
 80003ca:	e00b      	b.n	80003e4 <SVC_Handler_c+0x88>
	case 33:
		res=arg0 * arg1;
 80003cc:	693b      	ldr	r3, [r7, #16]
 80003ce:	68fa      	ldr	r2, [r7, #12]
 80003d0:	fb02 f303 	mul.w	r3, r2, r3
 80003d4:	61fb      	str	r3, [r7, #28]
		break;
 80003d6:	e005      	b.n	80003e4 <SVC_Handler_c+0x88>
	case 34:
		res=arg0 / arg1;
 80003d8:	693a      	ldr	r2, [r7, #16]
 80003da:	68fb      	ldr	r3, [r7, #12]
 80003dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80003e0:	61fb      	str	r3, [r7, #28]
		break;
 80003e2:	bf00      	nop
	default:
	}
	pMSP_base_addr[0]=res;
 80003e4:	69fa      	ldr	r2, [r7, #28]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	601a      	str	r2, [r3, #0]

	//pMSP_base_addr[0]=svs_number;


}
 80003ea:	bf00      	nop
 80003ec:	3720      	adds	r7, #32
 80003ee:	46bd      	mov	sp, r7
 80003f0:	bd80      	pop	{r7, pc}
 80003f2:	bf00      	nop
 80003f4:	08001524 	.word	0x08001524
 80003f8:	0800153c 	.word	0x0800153c

080003fc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b086      	sub	sp, #24
 8000400:	af00      	add	r7, sp, #0
 8000402:	60f8      	str	r0, [r7, #12]
 8000404:	60b9      	str	r1, [r7, #8]
 8000406:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000408:	2300      	movs	r3, #0
 800040a:	617b      	str	r3, [r7, #20]
 800040c:	e00a      	b.n	8000424 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800040e:	f3af 8000 	nop.w
 8000412:	4601      	mov	r1, r0
 8000414:	68bb      	ldr	r3, [r7, #8]
 8000416:	1c5a      	adds	r2, r3, #1
 8000418:	60ba      	str	r2, [r7, #8]
 800041a:	b2ca      	uxtb	r2, r1
 800041c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041e:	697b      	ldr	r3, [r7, #20]
 8000420:	3301      	adds	r3, #1
 8000422:	617b      	str	r3, [r7, #20]
 8000424:	697a      	ldr	r2, [r7, #20]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	429a      	cmp	r2, r3
 800042a:	dbf0      	blt.n	800040e <_read+0x12>
  }

  return len;
 800042c:	687b      	ldr	r3, [r7, #4]
}
 800042e:	4618      	mov	r0, r3
 8000430:	3718      	adds	r7, #24
 8000432:	46bd      	mov	sp, r7
 8000434:	bd80      	pop	{r7, pc}

08000436 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000436:	b580      	push	{r7, lr}
 8000438:	b086      	sub	sp, #24
 800043a:	af00      	add	r7, sp, #0
 800043c:	60f8      	str	r0, [r7, #12]
 800043e:	60b9      	str	r1, [r7, #8]
 8000440:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000442:	2300      	movs	r3, #0
 8000444:	617b      	str	r3, [r7, #20]
 8000446:	e009      	b.n	800045c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000448:	68bb      	ldr	r3, [r7, #8]
 800044a:	1c5a      	adds	r2, r3, #1
 800044c:	60ba      	str	r2, [r7, #8]
 800044e:	781b      	ldrb	r3, [r3, #0]
 8000450:	4618      	mov	r0, r3
 8000452:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000456:	697b      	ldr	r3, [r7, #20]
 8000458:	3301      	adds	r3, #1
 800045a:	617b      	str	r3, [r7, #20]
 800045c:	697a      	ldr	r2, [r7, #20]
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	429a      	cmp	r2, r3
 8000462:	dbf1      	blt.n	8000448 <_write+0x12>
  }
  return len;
 8000464:	687b      	ldr	r3, [r7, #4]
}
 8000466:	4618      	mov	r0, r3
 8000468:	3718      	adds	r7, #24
 800046a:	46bd      	mov	sp, r7
 800046c:	bd80      	pop	{r7, pc}

0800046e <_close>:

int _close(int file)
{
 800046e:	b480      	push	{r7}
 8000470:	b083      	sub	sp, #12
 8000472:	af00      	add	r7, sp, #0
 8000474:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000476:	f04f 33ff 	mov.w	r3, #4294967295
}
 800047a:	4618      	mov	r0, r3
 800047c:	370c      	adds	r7, #12
 800047e:	46bd      	mov	sp, r7
 8000480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000484:	4770      	bx	lr

08000486 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000486:	b480      	push	{r7}
 8000488:	b083      	sub	sp, #12
 800048a:	af00      	add	r7, sp, #0
 800048c:	6078      	str	r0, [r7, #4]
 800048e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000490:	683b      	ldr	r3, [r7, #0]
 8000492:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000496:	605a      	str	r2, [r3, #4]
  return 0;
 8000498:	2300      	movs	r3, #0
}
 800049a:	4618      	mov	r0, r3
 800049c:	370c      	adds	r7, #12
 800049e:	46bd      	mov	sp, r7
 80004a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a4:	4770      	bx	lr

080004a6 <_isatty>:

int _isatty(int file)
{
 80004a6:	b480      	push	{r7}
 80004a8:	b083      	sub	sp, #12
 80004aa:	af00      	add	r7, sp, #0
 80004ac:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004ae:	2301      	movs	r3, #1
}
 80004b0:	4618      	mov	r0, r3
 80004b2:	370c      	adds	r7, #12
 80004b4:	46bd      	mov	sp, r7
 80004b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ba:	4770      	bx	lr

080004bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004bc:	b480      	push	{r7}
 80004be:	b085      	sub	sp, #20
 80004c0:	af00      	add	r7, sp, #0
 80004c2:	60f8      	str	r0, [r7, #12]
 80004c4:	60b9      	str	r1, [r7, #8]
 80004c6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004c8:	2300      	movs	r3, #0
}
 80004ca:	4618      	mov	r0, r3
 80004cc:	3714      	adds	r7, #20
 80004ce:	46bd      	mov	sp, r7
 80004d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d4:	4770      	bx	lr
	...

080004d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004d8:	b580      	push	{r7, lr}
 80004da:	b086      	sub	sp, #24
 80004dc:	af00      	add	r7, sp, #0
 80004de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004e0:	4a14      	ldr	r2, [pc, #80]	; (8000534 <_sbrk+0x5c>)
 80004e2:	4b15      	ldr	r3, [pc, #84]	; (8000538 <_sbrk+0x60>)
 80004e4:	1ad3      	subs	r3, r2, r3
 80004e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004e8:	697b      	ldr	r3, [r7, #20]
 80004ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004ec:	4b13      	ldr	r3, [pc, #76]	; (800053c <_sbrk+0x64>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	2b00      	cmp	r3, #0
 80004f2:	d102      	bne.n	80004fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004f4:	4b11      	ldr	r3, [pc, #68]	; (800053c <_sbrk+0x64>)
 80004f6:	4a12      	ldr	r2, [pc, #72]	; (8000540 <_sbrk+0x68>)
 80004f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004fa:	4b10      	ldr	r3, [pc, #64]	; (800053c <_sbrk+0x64>)
 80004fc:	681a      	ldr	r2, [r3, #0]
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4413      	add	r3, r2
 8000502:	693a      	ldr	r2, [r7, #16]
 8000504:	429a      	cmp	r2, r3
 8000506:	d207      	bcs.n	8000518 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000508:	f000 fa9c 	bl	8000a44 <__errno>
 800050c:	4603      	mov	r3, r0
 800050e:	220c      	movs	r2, #12
 8000510:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000512:	f04f 33ff 	mov.w	r3, #4294967295
 8000516:	e009      	b.n	800052c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000518:	4b08      	ldr	r3, [pc, #32]	; (800053c <_sbrk+0x64>)
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800051e:	4b07      	ldr	r3, [pc, #28]	; (800053c <_sbrk+0x64>)
 8000520:	681a      	ldr	r2, [r3, #0]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	4413      	add	r3, r2
 8000526:	4a05      	ldr	r2, [pc, #20]	; (800053c <_sbrk+0x64>)
 8000528:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800052a:	68fb      	ldr	r3, [r7, #12]
}
 800052c:	4618      	mov	r0, r3
 800052e:	3718      	adds	r7, #24
 8000530:	46bd      	mov	sp, r7
 8000532:	bd80      	pop	{r7, pc}
 8000534:	20020000 	.word	0x20020000
 8000538:	00000400 	.word	0x00000400
 800053c:	20000078 	.word	0x20000078
 8000540:	200001c8 	.word	0x200001c8

08000544 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000546:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000548:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800054c:	480c      	ldr	r0, [pc, #48]	; (8000580 <LoopForever+0x6>)
  ldr r1, =_edata
 800054e:	490d      	ldr	r1, [pc, #52]	; (8000584 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000550:	4a0d      	ldr	r2, [pc, #52]	; (8000588 <LoopForever+0xe>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000554:	e002      	b.n	800055c <LoopCopyDataInit>

08000556 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000556:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000558:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800055a:	3304      	adds	r3, #4

0800055c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800055c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000560:	d3f9      	bcc.n	8000556 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000562:	4a0a      	ldr	r2, [pc, #40]	; (800058c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000564:	4c0a      	ldr	r4, [pc, #40]	; (8000590 <LoopForever+0x16>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000568:	e001      	b.n	800056e <LoopFillZerobss>

0800056a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800056a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800056c:	3204      	adds	r2, #4

0800056e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000570:	d3fb      	bcc.n	800056a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000572:	f000 fa6d 	bl	8000a50 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000576:	f7ff feb7 	bl	80002e8 <main>

0800057a <LoopForever>:

LoopForever:
  b LoopForever
 800057a:	e7fe      	b.n	800057a <LoopForever>
  ldr   r0, =_estack
 800057c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000580:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000584:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000588:	08001580 	.word	0x08001580
  ldr r2, =_sbss
 800058c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000590:	200001c8 	.word	0x200001c8

08000594 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000594:	e7fe      	b.n	8000594 <ADC_IRQHandler>
	...

08000598 <std>:
 8000598:	2300      	movs	r3, #0
 800059a:	b510      	push	{r4, lr}
 800059c:	4604      	mov	r4, r0
 800059e:	e9c0 3300 	strd	r3, r3, [r0]
 80005a2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005a6:	6083      	str	r3, [r0, #8]
 80005a8:	8181      	strh	r1, [r0, #12]
 80005aa:	6643      	str	r3, [r0, #100]	; 0x64
 80005ac:	81c2      	strh	r2, [r0, #14]
 80005ae:	6183      	str	r3, [r0, #24]
 80005b0:	4619      	mov	r1, r3
 80005b2:	2208      	movs	r2, #8
 80005b4:	305c      	adds	r0, #92	; 0x5c
 80005b6:	f000 f9f7 	bl	80009a8 <memset>
 80005ba:	4b0d      	ldr	r3, [pc, #52]	; (80005f0 <std+0x58>)
 80005bc:	6263      	str	r3, [r4, #36]	; 0x24
 80005be:	4b0d      	ldr	r3, [pc, #52]	; (80005f4 <std+0x5c>)
 80005c0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005c2:	4b0d      	ldr	r3, [pc, #52]	; (80005f8 <std+0x60>)
 80005c4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005c6:	4b0d      	ldr	r3, [pc, #52]	; (80005fc <std+0x64>)
 80005c8:	6323      	str	r3, [r4, #48]	; 0x30
 80005ca:	4b0d      	ldr	r3, [pc, #52]	; (8000600 <std+0x68>)
 80005cc:	6224      	str	r4, [r4, #32]
 80005ce:	429c      	cmp	r4, r3
 80005d0:	d006      	beq.n	80005e0 <std+0x48>
 80005d2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005d6:	4294      	cmp	r4, r2
 80005d8:	d002      	beq.n	80005e0 <std+0x48>
 80005da:	33d0      	adds	r3, #208	; 0xd0
 80005dc:	429c      	cmp	r4, r3
 80005de:	d105      	bne.n	80005ec <std+0x54>
 80005e0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e8:	f000 ba56 	b.w	8000a98 <__retarget_lock_init_recursive>
 80005ec:	bd10      	pop	{r4, pc}
 80005ee:	bf00      	nop
 80005f0:	080007f9 	.word	0x080007f9
 80005f4:	0800081b 	.word	0x0800081b
 80005f8:	08000853 	.word	0x08000853
 80005fc:	08000877 	.word	0x08000877
 8000600:	2000007c 	.word	0x2000007c

08000604 <stdio_exit_handler>:
 8000604:	4a02      	ldr	r2, [pc, #8]	; (8000610 <stdio_exit_handler+0xc>)
 8000606:	4903      	ldr	r1, [pc, #12]	; (8000614 <stdio_exit_handler+0x10>)
 8000608:	4803      	ldr	r0, [pc, #12]	; (8000618 <stdio_exit_handler+0x14>)
 800060a:	f000 b869 	b.w	80006e0 <_fwalk_sglue>
 800060e:	bf00      	nop
 8000610:	20000000 	.word	0x20000000
 8000614:	08001345 	.word	0x08001345
 8000618:	2000000c 	.word	0x2000000c

0800061c <cleanup_stdio>:
 800061c:	6841      	ldr	r1, [r0, #4]
 800061e:	4b0c      	ldr	r3, [pc, #48]	; (8000650 <cleanup_stdio+0x34>)
 8000620:	4299      	cmp	r1, r3
 8000622:	b510      	push	{r4, lr}
 8000624:	4604      	mov	r4, r0
 8000626:	d001      	beq.n	800062c <cleanup_stdio+0x10>
 8000628:	f000 fe8c 	bl	8001344 <_fflush_r>
 800062c:	68a1      	ldr	r1, [r4, #8]
 800062e:	4b09      	ldr	r3, [pc, #36]	; (8000654 <cleanup_stdio+0x38>)
 8000630:	4299      	cmp	r1, r3
 8000632:	d002      	beq.n	800063a <cleanup_stdio+0x1e>
 8000634:	4620      	mov	r0, r4
 8000636:	f000 fe85 	bl	8001344 <_fflush_r>
 800063a:	68e1      	ldr	r1, [r4, #12]
 800063c:	4b06      	ldr	r3, [pc, #24]	; (8000658 <cleanup_stdio+0x3c>)
 800063e:	4299      	cmp	r1, r3
 8000640:	d004      	beq.n	800064c <cleanup_stdio+0x30>
 8000642:	4620      	mov	r0, r4
 8000644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000648:	f000 be7c 	b.w	8001344 <_fflush_r>
 800064c:	bd10      	pop	{r4, pc}
 800064e:	bf00      	nop
 8000650:	2000007c 	.word	0x2000007c
 8000654:	200000e4 	.word	0x200000e4
 8000658:	2000014c 	.word	0x2000014c

0800065c <global_stdio_init.part.0>:
 800065c:	b510      	push	{r4, lr}
 800065e:	4b0b      	ldr	r3, [pc, #44]	; (800068c <global_stdio_init.part.0+0x30>)
 8000660:	4c0b      	ldr	r4, [pc, #44]	; (8000690 <global_stdio_init.part.0+0x34>)
 8000662:	4a0c      	ldr	r2, [pc, #48]	; (8000694 <global_stdio_init.part.0+0x38>)
 8000664:	601a      	str	r2, [r3, #0]
 8000666:	4620      	mov	r0, r4
 8000668:	2200      	movs	r2, #0
 800066a:	2104      	movs	r1, #4
 800066c:	f7ff ff94 	bl	8000598 <std>
 8000670:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000674:	2201      	movs	r2, #1
 8000676:	2109      	movs	r1, #9
 8000678:	f7ff ff8e 	bl	8000598 <std>
 800067c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000680:	2202      	movs	r2, #2
 8000682:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000686:	2112      	movs	r1, #18
 8000688:	f7ff bf86 	b.w	8000598 <std>
 800068c:	200001b4 	.word	0x200001b4
 8000690:	2000007c 	.word	0x2000007c
 8000694:	08000605 	.word	0x08000605

08000698 <__sfp_lock_acquire>:
 8000698:	4801      	ldr	r0, [pc, #4]	; (80006a0 <__sfp_lock_acquire+0x8>)
 800069a:	f000 b9fe 	b.w	8000a9a <__retarget_lock_acquire_recursive>
 800069e:	bf00      	nop
 80006a0:	200001bd 	.word	0x200001bd

080006a4 <__sfp_lock_release>:
 80006a4:	4801      	ldr	r0, [pc, #4]	; (80006ac <__sfp_lock_release+0x8>)
 80006a6:	f000 b9f9 	b.w	8000a9c <__retarget_lock_release_recursive>
 80006aa:	bf00      	nop
 80006ac:	200001bd 	.word	0x200001bd

080006b0 <__sinit>:
 80006b0:	b510      	push	{r4, lr}
 80006b2:	4604      	mov	r4, r0
 80006b4:	f7ff fff0 	bl	8000698 <__sfp_lock_acquire>
 80006b8:	6a23      	ldr	r3, [r4, #32]
 80006ba:	b11b      	cbz	r3, 80006c4 <__sinit+0x14>
 80006bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006c0:	f7ff bff0 	b.w	80006a4 <__sfp_lock_release>
 80006c4:	4b04      	ldr	r3, [pc, #16]	; (80006d8 <__sinit+0x28>)
 80006c6:	6223      	str	r3, [r4, #32]
 80006c8:	4b04      	ldr	r3, [pc, #16]	; (80006dc <__sinit+0x2c>)
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d1f5      	bne.n	80006bc <__sinit+0xc>
 80006d0:	f7ff ffc4 	bl	800065c <global_stdio_init.part.0>
 80006d4:	e7f2      	b.n	80006bc <__sinit+0xc>
 80006d6:	bf00      	nop
 80006d8:	0800061d 	.word	0x0800061d
 80006dc:	200001b4 	.word	0x200001b4

080006e0 <_fwalk_sglue>:
 80006e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006e4:	4607      	mov	r7, r0
 80006e6:	4688      	mov	r8, r1
 80006e8:	4614      	mov	r4, r2
 80006ea:	2600      	movs	r6, #0
 80006ec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006f0:	f1b9 0901 	subs.w	r9, r9, #1
 80006f4:	d505      	bpl.n	8000702 <_fwalk_sglue+0x22>
 80006f6:	6824      	ldr	r4, [r4, #0]
 80006f8:	2c00      	cmp	r4, #0
 80006fa:	d1f7      	bne.n	80006ec <_fwalk_sglue+0xc>
 80006fc:	4630      	mov	r0, r6
 80006fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000702:	89ab      	ldrh	r3, [r5, #12]
 8000704:	2b01      	cmp	r3, #1
 8000706:	d907      	bls.n	8000718 <_fwalk_sglue+0x38>
 8000708:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800070c:	3301      	adds	r3, #1
 800070e:	d003      	beq.n	8000718 <_fwalk_sglue+0x38>
 8000710:	4629      	mov	r1, r5
 8000712:	4638      	mov	r0, r7
 8000714:	47c0      	blx	r8
 8000716:	4306      	orrs	r6, r0
 8000718:	3568      	adds	r5, #104	; 0x68
 800071a:	e7e9      	b.n	80006f0 <_fwalk_sglue+0x10>

0800071c <iprintf>:
 800071c:	b40f      	push	{r0, r1, r2, r3}
 800071e:	b507      	push	{r0, r1, r2, lr}
 8000720:	4906      	ldr	r1, [pc, #24]	; (800073c <iprintf+0x20>)
 8000722:	ab04      	add	r3, sp, #16
 8000724:	6808      	ldr	r0, [r1, #0]
 8000726:	f853 2b04 	ldr.w	r2, [r3], #4
 800072a:	6881      	ldr	r1, [r0, #8]
 800072c:	9301      	str	r3, [sp, #4]
 800072e:	f000 fad9 	bl	8000ce4 <_vfiprintf_r>
 8000732:	b003      	add	sp, #12
 8000734:	f85d eb04 	ldr.w	lr, [sp], #4
 8000738:	b004      	add	sp, #16
 800073a:	4770      	bx	lr
 800073c:	20000058 	.word	0x20000058

08000740 <_puts_r>:
 8000740:	6a03      	ldr	r3, [r0, #32]
 8000742:	b570      	push	{r4, r5, r6, lr}
 8000744:	6884      	ldr	r4, [r0, #8]
 8000746:	4605      	mov	r5, r0
 8000748:	460e      	mov	r6, r1
 800074a:	b90b      	cbnz	r3, 8000750 <_puts_r+0x10>
 800074c:	f7ff ffb0 	bl	80006b0 <__sinit>
 8000750:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000752:	07db      	lsls	r3, r3, #31
 8000754:	d405      	bmi.n	8000762 <_puts_r+0x22>
 8000756:	89a3      	ldrh	r3, [r4, #12]
 8000758:	0598      	lsls	r0, r3, #22
 800075a:	d402      	bmi.n	8000762 <_puts_r+0x22>
 800075c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800075e:	f000 f99c 	bl	8000a9a <__retarget_lock_acquire_recursive>
 8000762:	89a3      	ldrh	r3, [r4, #12]
 8000764:	0719      	lsls	r1, r3, #28
 8000766:	d513      	bpl.n	8000790 <_puts_r+0x50>
 8000768:	6923      	ldr	r3, [r4, #16]
 800076a:	b18b      	cbz	r3, 8000790 <_puts_r+0x50>
 800076c:	3e01      	subs	r6, #1
 800076e:	68a3      	ldr	r3, [r4, #8]
 8000770:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000774:	3b01      	subs	r3, #1
 8000776:	60a3      	str	r3, [r4, #8]
 8000778:	b9e9      	cbnz	r1, 80007b6 <_puts_r+0x76>
 800077a:	2b00      	cmp	r3, #0
 800077c:	da2e      	bge.n	80007dc <_puts_r+0x9c>
 800077e:	4622      	mov	r2, r4
 8000780:	210a      	movs	r1, #10
 8000782:	4628      	mov	r0, r5
 8000784:	f000 f87b 	bl	800087e <__swbuf_r>
 8000788:	3001      	adds	r0, #1
 800078a:	d007      	beq.n	800079c <_puts_r+0x5c>
 800078c:	250a      	movs	r5, #10
 800078e:	e007      	b.n	80007a0 <_puts_r+0x60>
 8000790:	4621      	mov	r1, r4
 8000792:	4628      	mov	r0, r5
 8000794:	f000 f8b0 	bl	80008f8 <__swsetup_r>
 8000798:	2800      	cmp	r0, #0
 800079a:	d0e7      	beq.n	800076c <_puts_r+0x2c>
 800079c:	f04f 35ff 	mov.w	r5, #4294967295
 80007a0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80007a2:	07da      	lsls	r2, r3, #31
 80007a4:	d405      	bmi.n	80007b2 <_puts_r+0x72>
 80007a6:	89a3      	ldrh	r3, [r4, #12]
 80007a8:	059b      	lsls	r3, r3, #22
 80007aa:	d402      	bmi.n	80007b2 <_puts_r+0x72>
 80007ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007ae:	f000 f975 	bl	8000a9c <__retarget_lock_release_recursive>
 80007b2:	4628      	mov	r0, r5
 80007b4:	bd70      	pop	{r4, r5, r6, pc}
 80007b6:	2b00      	cmp	r3, #0
 80007b8:	da04      	bge.n	80007c4 <_puts_r+0x84>
 80007ba:	69a2      	ldr	r2, [r4, #24]
 80007bc:	429a      	cmp	r2, r3
 80007be:	dc06      	bgt.n	80007ce <_puts_r+0x8e>
 80007c0:	290a      	cmp	r1, #10
 80007c2:	d004      	beq.n	80007ce <_puts_r+0x8e>
 80007c4:	6823      	ldr	r3, [r4, #0]
 80007c6:	1c5a      	adds	r2, r3, #1
 80007c8:	6022      	str	r2, [r4, #0]
 80007ca:	7019      	strb	r1, [r3, #0]
 80007cc:	e7cf      	b.n	800076e <_puts_r+0x2e>
 80007ce:	4622      	mov	r2, r4
 80007d0:	4628      	mov	r0, r5
 80007d2:	f000 f854 	bl	800087e <__swbuf_r>
 80007d6:	3001      	adds	r0, #1
 80007d8:	d1c9      	bne.n	800076e <_puts_r+0x2e>
 80007da:	e7df      	b.n	800079c <_puts_r+0x5c>
 80007dc:	6823      	ldr	r3, [r4, #0]
 80007de:	250a      	movs	r5, #10
 80007e0:	1c5a      	adds	r2, r3, #1
 80007e2:	6022      	str	r2, [r4, #0]
 80007e4:	701d      	strb	r5, [r3, #0]
 80007e6:	e7db      	b.n	80007a0 <_puts_r+0x60>

080007e8 <puts>:
 80007e8:	4b02      	ldr	r3, [pc, #8]	; (80007f4 <puts+0xc>)
 80007ea:	4601      	mov	r1, r0
 80007ec:	6818      	ldr	r0, [r3, #0]
 80007ee:	f7ff bfa7 	b.w	8000740 <_puts_r>
 80007f2:	bf00      	nop
 80007f4:	20000058 	.word	0x20000058

080007f8 <__sread>:
 80007f8:	b510      	push	{r4, lr}
 80007fa:	460c      	mov	r4, r1
 80007fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000800:	f000 f8fc 	bl	80009fc <_read_r>
 8000804:	2800      	cmp	r0, #0
 8000806:	bfab      	itete	ge
 8000808:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800080a:	89a3      	ldrhlt	r3, [r4, #12]
 800080c:	181b      	addge	r3, r3, r0
 800080e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000812:	bfac      	ite	ge
 8000814:	6563      	strge	r3, [r4, #84]	; 0x54
 8000816:	81a3      	strhlt	r3, [r4, #12]
 8000818:	bd10      	pop	{r4, pc}

0800081a <__swrite>:
 800081a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800081e:	461f      	mov	r7, r3
 8000820:	898b      	ldrh	r3, [r1, #12]
 8000822:	05db      	lsls	r3, r3, #23
 8000824:	4605      	mov	r5, r0
 8000826:	460c      	mov	r4, r1
 8000828:	4616      	mov	r6, r2
 800082a:	d505      	bpl.n	8000838 <__swrite+0x1e>
 800082c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000830:	2302      	movs	r3, #2
 8000832:	2200      	movs	r2, #0
 8000834:	f000 f8d0 	bl	80009d8 <_lseek_r>
 8000838:	89a3      	ldrh	r3, [r4, #12]
 800083a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800083e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000842:	81a3      	strh	r3, [r4, #12]
 8000844:	4632      	mov	r2, r6
 8000846:	463b      	mov	r3, r7
 8000848:	4628      	mov	r0, r5
 800084a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800084e:	f000 b8e7 	b.w	8000a20 <_write_r>

08000852 <__sseek>:
 8000852:	b510      	push	{r4, lr}
 8000854:	460c      	mov	r4, r1
 8000856:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800085a:	f000 f8bd 	bl	80009d8 <_lseek_r>
 800085e:	1c43      	adds	r3, r0, #1
 8000860:	89a3      	ldrh	r3, [r4, #12]
 8000862:	bf15      	itete	ne
 8000864:	6560      	strne	r0, [r4, #84]	; 0x54
 8000866:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800086a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800086e:	81a3      	strheq	r3, [r4, #12]
 8000870:	bf18      	it	ne
 8000872:	81a3      	strhne	r3, [r4, #12]
 8000874:	bd10      	pop	{r4, pc}

08000876 <__sclose>:
 8000876:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800087a:	f000 b89d 	b.w	80009b8 <_close_r>

0800087e <__swbuf_r>:
 800087e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000880:	460e      	mov	r6, r1
 8000882:	4614      	mov	r4, r2
 8000884:	4605      	mov	r5, r0
 8000886:	b118      	cbz	r0, 8000890 <__swbuf_r+0x12>
 8000888:	6a03      	ldr	r3, [r0, #32]
 800088a:	b90b      	cbnz	r3, 8000890 <__swbuf_r+0x12>
 800088c:	f7ff ff10 	bl	80006b0 <__sinit>
 8000890:	69a3      	ldr	r3, [r4, #24]
 8000892:	60a3      	str	r3, [r4, #8]
 8000894:	89a3      	ldrh	r3, [r4, #12]
 8000896:	071a      	lsls	r2, r3, #28
 8000898:	d525      	bpl.n	80008e6 <__swbuf_r+0x68>
 800089a:	6923      	ldr	r3, [r4, #16]
 800089c:	b31b      	cbz	r3, 80008e6 <__swbuf_r+0x68>
 800089e:	6823      	ldr	r3, [r4, #0]
 80008a0:	6922      	ldr	r2, [r4, #16]
 80008a2:	1a98      	subs	r0, r3, r2
 80008a4:	6963      	ldr	r3, [r4, #20]
 80008a6:	b2f6      	uxtb	r6, r6
 80008a8:	4283      	cmp	r3, r0
 80008aa:	4637      	mov	r7, r6
 80008ac:	dc04      	bgt.n	80008b8 <__swbuf_r+0x3a>
 80008ae:	4621      	mov	r1, r4
 80008b0:	4628      	mov	r0, r5
 80008b2:	f000 fd47 	bl	8001344 <_fflush_r>
 80008b6:	b9e0      	cbnz	r0, 80008f2 <__swbuf_r+0x74>
 80008b8:	68a3      	ldr	r3, [r4, #8]
 80008ba:	3b01      	subs	r3, #1
 80008bc:	60a3      	str	r3, [r4, #8]
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	1c5a      	adds	r2, r3, #1
 80008c2:	6022      	str	r2, [r4, #0]
 80008c4:	701e      	strb	r6, [r3, #0]
 80008c6:	6962      	ldr	r2, [r4, #20]
 80008c8:	1c43      	adds	r3, r0, #1
 80008ca:	429a      	cmp	r2, r3
 80008cc:	d004      	beq.n	80008d8 <__swbuf_r+0x5a>
 80008ce:	89a3      	ldrh	r3, [r4, #12]
 80008d0:	07db      	lsls	r3, r3, #31
 80008d2:	d506      	bpl.n	80008e2 <__swbuf_r+0x64>
 80008d4:	2e0a      	cmp	r6, #10
 80008d6:	d104      	bne.n	80008e2 <__swbuf_r+0x64>
 80008d8:	4621      	mov	r1, r4
 80008da:	4628      	mov	r0, r5
 80008dc:	f000 fd32 	bl	8001344 <_fflush_r>
 80008e0:	b938      	cbnz	r0, 80008f2 <__swbuf_r+0x74>
 80008e2:	4638      	mov	r0, r7
 80008e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008e6:	4621      	mov	r1, r4
 80008e8:	4628      	mov	r0, r5
 80008ea:	f000 f805 	bl	80008f8 <__swsetup_r>
 80008ee:	2800      	cmp	r0, #0
 80008f0:	d0d5      	beq.n	800089e <__swbuf_r+0x20>
 80008f2:	f04f 37ff 	mov.w	r7, #4294967295
 80008f6:	e7f4      	b.n	80008e2 <__swbuf_r+0x64>

080008f8 <__swsetup_r>:
 80008f8:	b538      	push	{r3, r4, r5, lr}
 80008fa:	4b2a      	ldr	r3, [pc, #168]	; (80009a4 <__swsetup_r+0xac>)
 80008fc:	4605      	mov	r5, r0
 80008fe:	6818      	ldr	r0, [r3, #0]
 8000900:	460c      	mov	r4, r1
 8000902:	b118      	cbz	r0, 800090c <__swsetup_r+0x14>
 8000904:	6a03      	ldr	r3, [r0, #32]
 8000906:	b90b      	cbnz	r3, 800090c <__swsetup_r+0x14>
 8000908:	f7ff fed2 	bl	80006b0 <__sinit>
 800090c:	89a3      	ldrh	r3, [r4, #12]
 800090e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000912:	0718      	lsls	r0, r3, #28
 8000914:	d422      	bmi.n	800095c <__swsetup_r+0x64>
 8000916:	06d9      	lsls	r1, r3, #27
 8000918:	d407      	bmi.n	800092a <__swsetup_r+0x32>
 800091a:	2309      	movs	r3, #9
 800091c:	602b      	str	r3, [r5, #0]
 800091e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000922:	81a3      	strh	r3, [r4, #12]
 8000924:	f04f 30ff 	mov.w	r0, #4294967295
 8000928:	e034      	b.n	8000994 <__swsetup_r+0x9c>
 800092a:	0758      	lsls	r0, r3, #29
 800092c:	d512      	bpl.n	8000954 <__swsetup_r+0x5c>
 800092e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000930:	b141      	cbz	r1, 8000944 <__swsetup_r+0x4c>
 8000932:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000936:	4299      	cmp	r1, r3
 8000938:	d002      	beq.n	8000940 <__swsetup_r+0x48>
 800093a:	4628      	mov	r0, r5
 800093c:	f000 f8b0 	bl	8000aa0 <_free_r>
 8000940:	2300      	movs	r3, #0
 8000942:	6363      	str	r3, [r4, #52]	; 0x34
 8000944:	89a3      	ldrh	r3, [r4, #12]
 8000946:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800094a:	81a3      	strh	r3, [r4, #12]
 800094c:	2300      	movs	r3, #0
 800094e:	6063      	str	r3, [r4, #4]
 8000950:	6923      	ldr	r3, [r4, #16]
 8000952:	6023      	str	r3, [r4, #0]
 8000954:	89a3      	ldrh	r3, [r4, #12]
 8000956:	f043 0308 	orr.w	r3, r3, #8
 800095a:	81a3      	strh	r3, [r4, #12]
 800095c:	6923      	ldr	r3, [r4, #16]
 800095e:	b94b      	cbnz	r3, 8000974 <__swsetup_r+0x7c>
 8000960:	89a3      	ldrh	r3, [r4, #12]
 8000962:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000966:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800096a:	d003      	beq.n	8000974 <__swsetup_r+0x7c>
 800096c:	4621      	mov	r1, r4
 800096e:	4628      	mov	r0, r5
 8000970:	f000 fd36 	bl	80013e0 <__smakebuf_r>
 8000974:	89a0      	ldrh	r0, [r4, #12]
 8000976:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800097a:	f010 0301 	ands.w	r3, r0, #1
 800097e:	d00a      	beq.n	8000996 <__swsetup_r+0x9e>
 8000980:	2300      	movs	r3, #0
 8000982:	60a3      	str	r3, [r4, #8]
 8000984:	6963      	ldr	r3, [r4, #20]
 8000986:	425b      	negs	r3, r3
 8000988:	61a3      	str	r3, [r4, #24]
 800098a:	6923      	ldr	r3, [r4, #16]
 800098c:	b943      	cbnz	r3, 80009a0 <__swsetup_r+0xa8>
 800098e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000992:	d1c4      	bne.n	800091e <__swsetup_r+0x26>
 8000994:	bd38      	pop	{r3, r4, r5, pc}
 8000996:	0781      	lsls	r1, r0, #30
 8000998:	bf58      	it	pl
 800099a:	6963      	ldrpl	r3, [r4, #20]
 800099c:	60a3      	str	r3, [r4, #8]
 800099e:	e7f4      	b.n	800098a <__swsetup_r+0x92>
 80009a0:	2000      	movs	r0, #0
 80009a2:	e7f7      	b.n	8000994 <__swsetup_r+0x9c>
 80009a4:	20000058 	.word	0x20000058

080009a8 <memset>:
 80009a8:	4402      	add	r2, r0
 80009aa:	4603      	mov	r3, r0
 80009ac:	4293      	cmp	r3, r2
 80009ae:	d100      	bne.n	80009b2 <memset+0xa>
 80009b0:	4770      	bx	lr
 80009b2:	f803 1b01 	strb.w	r1, [r3], #1
 80009b6:	e7f9      	b.n	80009ac <memset+0x4>

080009b8 <_close_r>:
 80009b8:	b538      	push	{r3, r4, r5, lr}
 80009ba:	4d06      	ldr	r5, [pc, #24]	; (80009d4 <_close_r+0x1c>)
 80009bc:	2300      	movs	r3, #0
 80009be:	4604      	mov	r4, r0
 80009c0:	4608      	mov	r0, r1
 80009c2:	602b      	str	r3, [r5, #0]
 80009c4:	f7ff fd53 	bl	800046e <_close>
 80009c8:	1c43      	adds	r3, r0, #1
 80009ca:	d102      	bne.n	80009d2 <_close_r+0x1a>
 80009cc:	682b      	ldr	r3, [r5, #0]
 80009ce:	b103      	cbz	r3, 80009d2 <_close_r+0x1a>
 80009d0:	6023      	str	r3, [r4, #0]
 80009d2:	bd38      	pop	{r3, r4, r5, pc}
 80009d4:	200001b8 	.word	0x200001b8

080009d8 <_lseek_r>:
 80009d8:	b538      	push	{r3, r4, r5, lr}
 80009da:	4d07      	ldr	r5, [pc, #28]	; (80009f8 <_lseek_r+0x20>)
 80009dc:	4604      	mov	r4, r0
 80009de:	4608      	mov	r0, r1
 80009e0:	4611      	mov	r1, r2
 80009e2:	2200      	movs	r2, #0
 80009e4:	602a      	str	r2, [r5, #0]
 80009e6:	461a      	mov	r2, r3
 80009e8:	f7ff fd68 	bl	80004bc <_lseek>
 80009ec:	1c43      	adds	r3, r0, #1
 80009ee:	d102      	bne.n	80009f6 <_lseek_r+0x1e>
 80009f0:	682b      	ldr	r3, [r5, #0]
 80009f2:	b103      	cbz	r3, 80009f6 <_lseek_r+0x1e>
 80009f4:	6023      	str	r3, [r4, #0]
 80009f6:	bd38      	pop	{r3, r4, r5, pc}
 80009f8:	200001b8 	.word	0x200001b8

080009fc <_read_r>:
 80009fc:	b538      	push	{r3, r4, r5, lr}
 80009fe:	4d07      	ldr	r5, [pc, #28]	; (8000a1c <_read_r+0x20>)
 8000a00:	4604      	mov	r4, r0
 8000a02:	4608      	mov	r0, r1
 8000a04:	4611      	mov	r1, r2
 8000a06:	2200      	movs	r2, #0
 8000a08:	602a      	str	r2, [r5, #0]
 8000a0a:	461a      	mov	r2, r3
 8000a0c:	f7ff fcf6 	bl	80003fc <_read>
 8000a10:	1c43      	adds	r3, r0, #1
 8000a12:	d102      	bne.n	8000a1a <_read_r+0x1e>
 8000a14:	682b      	ldr	r3, [r5, #0]
 8000a16:	b103      	cbz	r3, 8000a1a <_read_r+0x1e>
 8000a18:	6023      	str	r3, [r4, #0]
 8000a1a:	bd38      	pop	{r3, r4, r5, pc}
 8000a1c:	200001b8 	.word	0x200001b8

08000a20 <_write_r>:
 8000a20:	b538      	push	{r3, r4, r5, lr}
 8000a22:	4d07      	ldr	r5, [pc, #28]	; (8000a40 <_write_r+0x20>)
 8000a24:	4604      	mov	r4, r0
 8000a26:	4608      	mov	r0, r1
 8000a28:	4611      	mov	r1, r2
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	602a      	str	r2, [r5, #0]
 8000a2e:	461a      	mov	r2, r3
 8000a30:	f7ff fd01 	bl	8000436 <_write>
 8000a34:	1c43      	adds	r3, r0, #1
 8000a36:	d102      	bne.n	8000a3e <_write_r+0x1e>
 8000a38:	682b      	ldr	r3, [r5, #0]
 8000a3a:	b103      	cbz	r3, 8000a3e <_write_r+0x1e>
 8000a3c:	6023      	str	r3, [r4, #0]
 8000a3e:	bd38      	pop	{r3, r4, r5, pc}
 8000a40:	200001b8 	.word	0x200001b8

08000a44 <__errno>:
 8000a44:	4b01      	ldr	r3, [pc, #4]	; (8000a4c <__errno+0x8>)
 8000a46:	6818      	ldr	r0, [r3, #0]
 8000a48:	4770      	bx	lr
 8000a4a:	bf00      	nop
 8000a4c:	20000058 	.word	0x20000058

08000a50 <__libc_init_array>:
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	4d0d      	ldr	r5, [pc, #52]	; (8000a88 <__libc_init_array+0x38>)
 8000a54:	4c0d      	ldr	r4, [pc, #52]	; (8000a8c <__libc_init_array+0x3c>)
 8000a56:	1b64      	subs	r4, r4, r5
 8000a58:	10a4      	asrs	r4, r4, #2
 8000a5a:	2600      	movs	r6, #0
 8000a5c:	42a6      	cmp	r6, r4
 8000a5e:	d109      	bne.n	8000a74 <__libc_init_array+0x24>
 8000a60:	4d0b      	ldr	r5, [pc, #44]	; (8000a90 <__libc_init_array+0x40>)
 8000a62:	4c0c      	ldr	r4, [pc, #48]	; (8000a94 <__libc_init_array+0x44>)
 8000a64:	f000 fd2a 	bl	80014bc <_init>
 8000a68:	1b64      	subs	r4, r4, r5
 8000a6a:	10a4      	asrs	r4, r4, #2
 8000a6c:	2600      	movs	r6, #0
 8000a6e:	42a6      	cmp	r6, r4
 8000a70:	d105      	bne.n	8000a7e <__libc_init_array+0x2e>
 8000a72:	bd70      	pop	{r4, r5, r6, pc}
 8000a74:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a78:	4798      	blx	r3
 8000a7a:	3601      	adds	r6, #1
 8000a7c:	e7ee      	b.n	8000a5c <__libc_init_array+0xc>
 8000a7e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a82:	4798      	blx	r3
 8000a84:	3601      	adds	r6, #1
 8000a86:	e7f2      	b.n	8000a6e <__libc_init_array+0x1e>
 8000a88:	08001578 	.word	0x08001578
 8000a8c:	08001578 	.word	0x08001578
 8000a90:	08001578 	.word	0x08001578
 8000a94:	0800157c 	.word	0x0800157c

08000a98 <__retarget_lock_init_recursive>:
 8000a98:	4770      	bx	lr

08000a9a <__retarget_lock_acquire_recursive>:
 8000a9a:	4770      	bx	lr

08000a9c <__retarget_lock_release_recursive>:
 8000a9c:	4770      	bx	lr
	...

08000aa0 <_free_r>:
 8000aa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000aa2:	2900      	cmp	r1, #0
 8000aa4:	d044      	beq.n	8000b30 <_free_r+0x90>
 8000aa6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000aaa:	9001      	str	r0, [sp, #4]
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	f1a1 0404 	sub.w	r4, r1, #4
 8000ab2:	bfb8      	it	lt
 8000ab4:	18e4      	addlt	r4, r4, r3
 8000ab6:	f000 f8df 	bl	8000c78 <__malloc_lock>
 8000aba:	4a1e      	ldr	r2, [pc, #120]	; (8000b34 <_free_r+0x94>)
 8000abc:	9801      	ldr	r0, [sp, #4]
 8000abe:	6813      	ldr	r3, [r2, #0]
 8000ac0:	b933      	cbnz	r3, 8000ad0 <_free_r+0x30>
 8000ac2:	6063      	str	r3, [r4, #4]
 8000ac4:	6014      	str	r4, [r2, #0]
 8000ac6:	b003      	add	sp, #12
 8000ac8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000acc:	f000 b8da 	b.w	8000c84 <__malloc_unlock>
 8000ad0:	42a3      	cmp	r3, r4
 8000ad2:	d908      	bls.n	8000ae6 <_free_r+0x46>
 8000ad4:	6825      	ldr	r5, [r4, #0]
 8000ad6:	1961      	adds	r1, r4, r5
 8000ad8:	428b      	cmp	r3, r1
 8000ada:	bf01      	itttt	eq
 8000adc:	6819      	ldreq	r1, [r3, #0]
 8000ade:	685b      	ldreq	r3, [r3, #4]
 8000ae0:	1949      	addeq	r1, r1, r5
 8000ae2:	6021      	streq	r1, [r4, #0]
 8000ae4:	e7ed      	b.n	8000ac2 <_free_r+0x22>
 8000ae6:	461a      	mov	r2, r3
 8000ae8:	685b      	ldr	r3, [r3, #4]
 8000aea:	b10b      	cbz	r3, 8000af0 <_free_r+0x50>
 8000aec:	42a3      	cmp	r3, r4
 8000aee:	d9fa      	bls.n	8000ae6 <_free_r+0x46>
 8000af0:	6811      	ldr	r1, [r2, #0]
 8000af2:	1855      	adds	r5, r2, r1
 8000af4:	42a5      	cmp	r5, r4
 8000af6:	d10b      	bne.n	8000b10 <_free_r+0x70>
 8000af8:	6824      	ldr	r4, [r4, #0]
 8000afa:	4421      	add	r1, r4
 8000afc:	1854      	adds	r4, r2, r1
 8000afe:	42a3      	cmp	r3, r4
 8000b00:	6011      	str	r1, [r2, #0]
 8000b02:	d1e0      	bne.n	8000ac6 <_free_r+0x26>
 8000b04:	681c      	ldr	r4, [r3, #0]
 8000b06:	685b      	ldr	r3, [r3, #4]
 8000b08:	6053      	str	r3, [r2, #4]
 8000b0a:	440c      	add	r4, r1
 8000b0c:	6014      	str	r4, [r2, #0]
 8000b0e:	e7da      	b.n	8000ac6 <_free_r+0x26>
 8000b10:	d902      	bls.n	8000b18 <_free_r+0x78>
 8000b12:	230c      	movs	r3, #12
 8000b14:	6003      	str	r3, [r0, #0]
 8000b16:	e7d6      	b.n	8000ac6 <_free_r+0x26>
 8000b18:	6825      	ldr	r5, [r4, #0]
 8000b1a:	1961      	adds	r1, r4, r5
 8000b1c:	428b      	cmp	r3, r1
 8000b1e:	bf04      	itt	eq
 8000b20:	6819      	ldreq	r1, [r3, #0]
 8000b22:	685b      	ldreq	r3, [r3, #4]
 8000b24:	6063      	str	r3, [r4, #4]
 8000b26:	bf04      	itt	eq
 8000b28:	1949      	addeq	r1, r1, r5
 8000b2a:	6021      	streq	r1, [r4, #0]
 8000b2c:	6054      	str	r4, [r2, #4]
 8000b2e:	e7ca      	b.n	8000ac6 <_free_r+0x26>
 8000b30:	b003      	add	sp, #12
 8000b32:	bd30      	pop	{r4, r5, pc}
 8000b34:	200001c0 	.word	0x200001c0

08000b38 <sbrk_aligned>:
 8000b38:	b570      	push	{r4, r5, r6, lr}
 8000b3a:	4e0e      	ldr	r6, [pc, #56]	; (8000b74 <sbrk_aligned+0x3c>)
 8000b3c:	460c      	mov	r4, r1
 8000b3e:	6831      	ldr	r1, [r6, #0]
 8000b40:	4605      	mov	r5, r0
 8000b42:	b911      	cbnz	r1, 8000b4a <sbrk_aligned+0x12>
 8000b44:	f000 fcaa 	bl	800149c <_sbrk_r>
 8000b48:	6030      	str	r0, [r6, #0]
 8000b4a:	4621      	mov	r1, r4
 8000b4c:	4628      	mov	r0, r5
 8000b4e:	f000 fca5 	bl	800149c <_sbrk_r>
 8000b52:	1c43      	adds	r3, r0, #1
 8000b54:	d00a      	beq.n	8000b6c <sbrk_aligned+0x34>
 8000b56:	1cc4      	adds	r4, r0, #3
 8000b58:	f024 0403 	bic.w	r4, r4, #3
 8000b5c:	42a0      	cmp	r0, r4
 8000b5e:	d007      	beq.n	8000b70 <sbrk_aligned+0x38>
 8000b60:	1a21      	subs	r1, r4, r0
 8000b62:	4628      	mov	r0, r5
 8000b64:	f000 fc9a 	bl	800149c <_sbrk_r>
 8000b68:	3001      	adds	r0, #1
 8000b6a:	d101      	bne.n	8000b70 <sbrk_aligned+0x38>
 8000b6c:	f04f 34ff 	mov.w	r4, #4294967295
 8000b70:	4620      	mov	r0, r4
 8000b72:	bd70      	pop	{r4, r5, r6, pc}
 8000b74:	200001c4 	.word	0x200001c4

08000b78 <_malloc_r>:
 8000b78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b7c:	1ccd      	adds	r5, r1, #3
 8000b7e:	f025 0503 	bic.w	r5, r5, #3
 8000b82:	3508      	adds	r5, #8
 8000b84:	2d0c      	cmp	r5, #12
 8000b86:	bf38      	it	cc
 8000b88:	250c      	movcc	r5, #12
 8000b8a:	2d00      	cmp	r5, #0
 8000b8c:	4607      	mov	r7, r0
 8000b8e:	db01      	blt.n	8000b94 <_malloc_r+0x1c>
 8000b90:	42a9      	cmp	r1, r5
 8000b92:	d905      	bls.n	8000ba0 <_malloc_r+0x28>
 8000b94:	230c      	movs	r3, #12
 8000b96:	603b      	str	r3, [r7, #0]
 8000b98:	2600      	movs	r6, #0
 8000b9a:	4630      	mov	r0, r6
 8000b9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ba0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000c74 <_malloc_r+0xfc>
 8000ba4:	f000 f868 	bl	8000c78 <__malloc_lock>
 8000ba8:	f8d8 3000 	ldr.w	r3, [r8]
 8000bac:	461c      	mov	r4, r3
 8000bae:	bb5c      	cbnz	r4, 8000c08 <_malloc_r+0x90>
 8000bb0:	4629      	mov	r1, r5
 8000bb2:	4638      	mov	r0, r7
 8000bb4:	f7ff ffc0 	bl	8000b38 <sbrk_aligned>
 8000bb8:	1c43      	adds	r3, r0, #1
 8000bba:	4604      	mov	r4, r0
 8000bbc:	d155      	bne.n	8000c6a <_malloc_r+0xf2>
 8000bbe:	f8d8 4000 	ldr.w	r4, [r8]
 8000bc2:	4626      	mov	r6, r4
 8000bc4:	2e00      	cmp	r6, #0
 8000bc6:	d145      	bne.n	8000c54 <_malloc_r+0xdc>
 8000bc8:	2c00      	cmp	r4, #0
 8000bca:	d048      	beq.n	8000c5e <_malloc_r+0xe6>
 8000bcc:	6823      	ldr	r3, [r4, #0]
 8000bce:	4631      	mov	r1, r6
 8000bd0:	4638      	mov	r0, r7
 8000bd2:	eb04 0903 	add.w	r9, r4, r3
 8000bd6:	f000 fc61 	bl	800149c <_sbrk_r>
 8000bda:	4581      	cmp	r9, r0
 8000bdc:	d13f      	bne.n	8000c5e <_malloc_r+0xe6>
 8000bde:	6821      	ldr	r1, [r4, #0]
 8000be0:	1a6d      	subs	r5, r5, r1
 8000be2:	4629      	mov	r1, r5
 8000be4:	4638      	mov	r0, r7
 8000be6:	f7ff ffa7 	bl	8000b38 <sbrk_aligned>
 8000bea:	3001      	adds	r0, #1
 8000bec:	d037      	beq.n	8000c5e <_malloc_r+0xe6>
 8000bee:	6823      	ldr	r3, [r4, #0]
 8000bf0:	442b      	add	r3, r5
 8000bf2:	6023      	str	r3, [r4, #0]
 8000bf4:	f8d8 3000 	ldr.w	r3, [r8]
 8000bf8:	2b00      	cmp	r3, #0
 8000bfa:	d038      	beq.n	8000c6e <_malloc_r+0xf6>
 8000bfc:	685a      	ldr	r2, [r3, #4]
 8000bfe:	42a2      	cmp	r2, r4
 8000c00:	d12b      	bne.n	8000c5a <_malloc_r+0xe2>
 8000c02:	2200      	movs	r2, #0
 8000c04:	605a      	str	r2, [r3, #4]
 8000c06:	e00f      	b.n	8000c28 <_malloc_r+0xb0>
 8000c08:	6822      	ldr	r2, [r4, #0]
 8000c0a:	1b52      	subs	r2, r2, r5
 8000c0c:	d41f      	bmi.n	8000c4e <_malloc_r+0xd6>
 8000c0e:	2a0b      	cmp	r2, #11
 8000c10:	d917      	bls.n	8000c42 <_malloc_r+0xca>
 8000c12:	1961      	adds	r1, r4, r5
 8000c14:	42a3      	cmp	r3, r4
 8000c16:	6025      	str	r5, [r4, #0]
 8000c18:	bf18      	it	ne
 8000c1a:	6059      	strne	r1, [r3, #4]
 8000c1c:	6863      	ldr	r3, [r4, #4]
 8000c1e:	bf08      	it	eq
 8000c20:	f8c8 1000 	streq.w	r1, [r8]
 8000c24:	5162      	str	r2, [r4, r5]
 8000c26:	604b      	str	r3, [r1, #4]
 8000c28:	4638      	mov	r0, r7
 8000c2a:	f104 060b 	add.w	r6, r4, #11
 8000c2e:	f000 f829 	bl	8000c84 <__malloc_unlock>
 8000c32:	f026 0607 	bic.w	r6, r6, #7
 8000c36:	1d23      	adds	r3, r4, #4
 8000c38:	1af2      	subs	r2, r6, r3
 8000c3a:	d0ae      	beq.n	8000b9a <_malloc_r+0x22>
 8000c3c:	1b9b      	subs	r3, r3, r6
 8000c3e:	50a3      	str	r3, [r4, r2]
 8000c40:	e7ab      	b.n	8000b9a <_malloc_r+0x22>
 8000c42:	42a3      	cmp	r3, r4
 8000c44:	6862      	ldr	r2, [r4, #4]
 8000c46:	d1dd      	bne.n	8000c04 <_malloc_r+0x8c>
 8000c48:	f8c8 2000 	str.w	r2, [r8]
 8000c4c:	e7ec      	b.n	8000c28 <_malloc_r+0xb0>
 8000c4e:	4623      	mov	r3, r4
 8000c50:	6864      	ldr	r4, [r4, #4]
 8000c52:	e7ac      	b.n	8000bae <_malloc_r+0x36>
 8000c54:	4634      	mov	r4, r6
 8000c56:	6876      	ldr	r6, [r6, #4]
 8000c58:	e7b4      	b.n	8000bc4 <_malloc_r+0x4c>
 8000c5a:	4613      	mov	r3, r2
 8000c5c:	e7cc      	b.n	8000bf8 <_malloc_r+0x80>
 8000c5e:	230c      	movs	r3, #12
 8000c60:	603b      	str	r3, [r7, #0]
 8000c62:	4638      	mov	r0, r7
 8000c64:	f000 f80e 	bl	8000c84 <__malloc_unlock>
 8000c68:	e797      	b.n	8000b9a <_malloc_r+0x22>
 8000c6a:	6025      	str	r5, [r4, #0]
 8000c6c:	e7dc      	b.n	8000c28 <_malloc_r+0xb0>
 8000c6e:	605b      	str	r3, [r3, #4]
 8000c70:	deff      	udf	#255	; 0xff
 8000c72:	bf00      	nop
 8000c74:	200001c0 	.word	0x200001c0

08000c78 <__malloc_lock>:
 8000c78:	4801      	ldr	r0, [pc, #4]	; (8000c80 <__malloc_lock+0x8>)
 8000c7a:	f7ff bf0e 	b.w	8000a9a <__retarget_lock_acquire_recursive>
 8000c7e:	bf00      	nop
 8000c80:	200001bc 	.word	0x200001bc

08000c84 <__malloc_unlock>:
 8000c84:	4801      	ldr	r0, [pc, #4]	; (8000c8c <__malloc_unlock+0x8>)
 8000c86:	f7ff bf09 	b.w	8000a9c <__retarget_lock_release_recursive>
 8000c8a:	bf00      	nop
 8000c8c:	200001bc 	.word	0x200001bc

08000c90 <__sfputc_r>:
 8000c90:	6893      	ldr	r3, [r2, #8]
 8000c92:	3b01      	subs	r3, #1
 8000c94:	2b00      	cmp	r3, #0
 8000c96:	b410      	push	{r4}
 8000c98:	6093      	str	r3, [r2, #8]
 8000c9a:	da08      	bge.n	8000cae <__sfputc_r+0x1e>
 8000c9c:	6994      	ldr	r4, [r2, #24]
 8000c9e:	42a3      	cmp	r3, r4
 8000ca0:	db01      	blt.n	8000ca6 <__sfputc_r+0x16>
 8000ca2:	290a      	cmp	r1, #10
 8000ca4:	d103      	bne.n	8000cae <__sfputc_r+0x1e>
 8000ca6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000caa:	f7ff bde8 	b.w	800087e <__swbuf_r>
 8000cae:	6813      	ldr	r3, [r2, #0]
 8000cb0:	1c58      	adds	r0, r3, #1
 8000cb2:	6010      	str	r0, [r2, #0]
 8000cb4:	7019      	strb	r1, [r3, #0]
 8000cb6:	4608      	mov	r0, r1
 8000cb8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cbc:	4770      	bx	lr

08000cbe <__sfputs_r>:
 8000cbe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cc0:	4606      	mov	r6, r0
 8000cc2:	460f      	mov	r7, r1
 8000cc4:	4614      	mov	r4, r2
 8000cc6:	18d5      	adds	r5, r2, r3
 8000cc8:	42ac      	cmp	r4, r5
 8000cca:	d101      	bne.n	8000cd0 <__sfputs_r+0x12>
 8000ccc:	2000      	movs	r0, #0
 8000cce:	e007      	b.n	8000ce0 <__sfputs_r+0x22>
 8000cd0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cd4:	463a      	mov	r2, r7
 8000cd6:	4630      	mov	r0, r6
 8000cd8:	f7ff ffda 	bl	8000c90 <__sfputc_r>
 8000cdc:	1c43      	adds	r3, r0, #1
 8000cde:	d1f3      	bne.n	8000cc8 <__sfputs_r+0xa>
 8000ce0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ce4 <_vfiprintf_r>:
 8000ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ce8:	460d      	mov	r5, r1
 8000cea:	b09d      	sub	sp, #116	; 0x74
 8000cec:	4614      	mov	r4, r2
 8000cee:	4698      	mov	r8, r3
 8000cf0:	4606      	mov	r6, r0
 8000cf2:	b118      	cbz	r0, 8000cfc <_vfiprintf_r+0x18>
 8000cf4:	6a03      	ldr	r3, [r0, #32]
 8000cf6:	b90b      	cbnz	r3, 8000cfc <_vfiprintf_r+0x18>
 8000cf8:	f7ff fcda 	bl	80006b0 <__sinit>
 8000cfc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cfe:	07d9      	lsls	r1, r3, #31
 8000d00:	d405      	bmi.n	8000d0e <_vfiprintf_r+0x2a>
 8000d02:	89ab      	ldrh	r3, [r5, #12]
 8000d04:	059a      	lsls	r2, r3, #22
 8000d06:	d402      	bmi.n	8000d0e <_vfiprintf_r+0x2a>
 8000d08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d0a:	f7ff fec6 	bl	8000a9a <__retarget_lock_acquire_recursive>
 8000d0e:	89ab      	ldrh	r3, [r5, #12]
 8000d10:	071b      	lsls	r3, r3, #28
 8000d12:	d501      	bpl.n	8000d18 <_vfiprintf_r+0x34>
 8000d14:	692b      	ldr	r3, [r5, #16]
 8000d16:	b99b      	cbnz	r3, 8000d40 <_vfiprintf_r+0x5c>
 8000d18:	4629      	mov	r1, r5
 8000d1a:	4630      	mov	r0, r6
 8000d1c:	f7ff fdec 	bl	80008f8 <__swsetup_r>
 8000d20:	b170      	cbz	r0, 8000d40 <_vfiprintf_r+0x5c>
 8000d22:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d24:	07dc      	lsls	r4, r3, #31
 8000d26:	d504      	bpl.n	8000d32 <_vfiprintf_r+0x4e>
 8000d28:	f04f 30ff 	mov.w	r0, #4294967295
 8000d2c:	b01d      	add	sp, #116	; 0x74
 8000d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d32:	89ab      	ldrh	r3, [r5, #12]
 8000d34:	0598      	lsls	r0, r3, #22
 8000d36:	d4f7      	bmi.n	8000d28 <_vfiprintf_r+0x44>
 8000d38:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d3a:	f7ff feaf 	bl	8000a9c <__retarget_lock_release_recursive>
 8000d3e:	e7f3      	b.n	8000d28 <_vfiprintf_r+0x44>
 8000d40:	2300      	movs	r3, #0
 8000d42:	9309      	str	r3, [sp, #36]	; 0x24
 8000d44:	2320      	movs	r3, #32
 8000d46:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d4a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d4e:	2330      	movs	r3, #48	; 0x30
 8000d50:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000f04 <_vfiprintf_r+0x220>
 8000d54:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d58:	f04f 0901 	mov.w	r9, #1
 8000d5c:	4623      	mov	r3, r4
 8000d5e:	469a      	mov	sl, r3
 8000d60:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d64:	b10a      	cbz	r2, 8000d6a <_vfiprintf_r+0x86>
 8000d66:	2a25      	cmp	r2, #37	; 0x25
 8000d68:	d1f9      	bne.n	8000d5e <_vfiprintf_r+0x7a>
 8000d6a:	ebba 0b04 	subs.w	fp, sl, r4
 8000d6e:	d00b      	beq.n	8000d88 <_vfiprintf_r+0xa4>
 8000d70:	465b      	mov	r3, fp
 8000d72:	4622      	mov	r2, r4
 8000d74:	4629      	mov	r1, r5
 8000d76:	4630      	mov	r0, r6
 8000d78:	f7ff ffa1 	bl	8000cbe <__sfputs_r>
 8000d7c:	3001      	adds	r0, #1
 8000d7e:	f000 80a9 	beq.w	8000ed4 <_vfiprintf_r+0x1f0>
 8000d82:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d84:	445a      	add	r2, fp
 8000d86:	9209      	str	r2, [sp, #36]	; 0x24
 8000d88:	f89a 3000 	ldrb.w	r3, [sl]
 8000d8c:	2b00      	cmp	r3, #0
 8000d8e:	f000 80a1 	beq.w	8000ed4 <_vfiprintf_r+0x1f0>
 8000d92:	2300      	movs	r3, #0
 8000d94:	f04f 32ff 	mov.w	r2, #4294967295
 8000d98:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d9c:	f10a 0a01 	add.w	sl, sl, #1
 8000da0:	9304      	str	r3, [sp, #16]
 8000da2:	9307      	str	r3, [sp, #28]
 8000da4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000da8:	931a      	str	r3, [sp, #104]	; 0x68
 8000daa:	4654      	mov	r4, sl
 8000dac:	2205      	movs	r2, #5
 8000dae:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000db2:	4854      	ldr	r0, [pc, #336]	; (8000f04 <_vfiprintf_r+0x220>)
 8000db4:	f7ff fa0c 	bl	80001d0 <memchr>
 8000db8:	9a04      	ldr	r2, [sp, #16]
 8000dba:	b9d8      	cbnz	r0, 8000df4 <_vfiprintf_r+0x110>
 8000dbc:	06d1      	lsls	r1, r2, #27
 8000dbe:	bf44      	itt	mi
 8000dc0:	2320      	movmi	r3, #32
 8000dc2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000dc6:	0713      	lsls	r3, r2, #28
 8000dc8:	bf44      	itt	mi
 8000dca:	232b      	movmi	r3, #43	; 0x2b
 8000dcc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000dd0:	f89a 3000 	ldrb.w	r3, [sl]
 8000dd4:	2b2a      	cmp	r3, #42	; 0x2a
 8000dd6:	d015      	beq.n	8000e04 <_vfiprintf_r+0x120>
 8000dd8:	9a07      	ldr	r2, [sp, #28]
 8000dda:	4654      	mov	r4, sl
 8000ddc:	2000      	movs	r0, #0
 8000dde:	f04f 0c0a 	mov.w	ip, #10
 8000de2:	4621      	mov	r1, r4
 8000de4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000de8:	3b30      	subs	r3, #48	; 0x30
 8000dea:	2b09      	cmp	r3, #9
 8000dec:	d94d      	bls.n	8000e8a <_vfiprintf_r+0x1a6>
 8000dee:	b1b0      	cbz	r0, 8000e1e <_vfiprintf_r+0x13a>
 8000df0:	9207      	str	r2, [sp, #28]
 8000df2:	e014      	b.n	8000e1e <_vfiprintf_r+0x13a>
 8000df4:	eba0 0308 	sub.w	r3, r0, r8
 8000df8:	fa09 f303 	lsl.w	r3, r9, r3
 8000dfc:	4313      	orrs	r3, r2
 8000dfe:	9304      	str	r3, [sp, #16]
 8000e00:	46a2      	mov	sl, r4
 8000e02:	e7d2      	b.n	8000daa <_vfiprintf_r+0xc6>
 8000e04:	9b03      	ldr	r3, [sp, #12]
 8000e06:	1d19      	adds	r1, r3, #4
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	9103      	str	r1, [sp, #12]
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	bfbb      	ittet	lt
 8000e10:	425b      	neglt	r3, r3
 8000e12:	f042 0202 	orrlt.w	r2, r2, #2
 8000e16:	9307      	strge	r3, [sp, #28]
 8000e18:	9307      	strlt	r3, [sp, #28]
 8000e1a:	bfb8      	it	lt
 8000e1c:	9204      	strlt	r2, [sp, #16]
 8000e1e:	7823      	ldrb	r3, [r4, #0]
 8000e20:	2b2e      	cmp	r3, #46	; 0x2e
 8000e22:	d10c      	bne.n	8000e3e <_vfiprintf_r+0x15a>
 8000e24:	7863      	ldrb	r3, [r4, #1]
 8000e26:	2b2a      	cmp	r3, #42	; 0x2a
 8000e28:	d134      	bne.n	8000e94 <_vfiprintf_r+0x1b0>
 8000e2a:	9b03      	ldr	r3, [sp, #12]
 8000e2c:	1d1a      	adds	r2, r3, #4
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	9203      	str	r2, [sp, #12]
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	bfb8      	it	lt
 8000e36:	f04f 33ff 	movlt.w	r3, #4294967295
 8000e3a:	3402      	adds	r4, #2
 8000e3c:	9305      	str	r3, [sp, #20]
 8000e3e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000f14 <_vfiprintf_r+0x230>
 8000e42:	7821      	ldrb	r1, [r4, #0]
 8000e44:	2203      	movs	r2, #3
 8000e46:	4650      	mov	r0, sl
 8000e48:	f7ff f9c2 	bl	80001d0 <memchr>
 8000e4c:	b138      	cbz	r0, 8000e5e <_vfiprintf_r+0x17a>
 8000e4e:	9b04      	ldr	r3, [sp, #16]
 8000e50:	eba0 000a 	sub.w	r0, r0, sl
 8000e54:	2240      	movs	r2, #64	; 0x40
 8000e56:	4082      	lsls	r2, r0
 8000e58:	4313      	orrs	r3, r2
 8000e5a:	3401      	adds	r4, #1
 8000e5c:	9304      	str	r3, [sp, #16]
 8000e5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e62:	4829      	ldr	r0, [pc, #164]	; (8000f08 <_vfiprintf_r+0x224>)
 8000e64:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e68:	2206      	movs	r2, #6
 8000e6a:	f7ff f9b1 	bl	80001d0 <memchr>
 8000e6e:	2800      	cmp	r0, #0
 8000e70:	d03f      	beq.n	8000ef2 <_vfiprintf_r+0x20e>
 8000e72:	4b26      	ldr	r3, [pc, #152]	; (8000f0c <_vfiprintf_r+0x228>)
 8000e74:	bb1b      	cbnz	r3, 8000ebe <_vfiprintf_r+0x1da>
 8000e76:	9b03      	ldr	r3, [sp, #12]
 8000e78:	3307      	adds	r3, #7
 8000e7a:	f023 0307 	bic.w	r3, r3, #7
 8000e7e:	3308      	adds	r3, #8
 8000e80:	9303      	str	r3, [sp, #12]
 8000e82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e84:	443b      	add	r3, r7
 8000e86:	9309      	str	r3, [sp, #36]	; 0x24
 8000e88:	e768      	b.n	8000d5c <_vfiprintf_r+0x78>
 8000e8a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e8e:	460c      	mov	r4, r1
 8000e90:	2001      	movs	r0, #1
 8000e92:	e7a6      	b.n	8000de2 <_vfiprintf_r+0xfe>
 8000e94:	2300      	movs	r3, #0
 8000e96:	3401      	adds	r4, #1
 8000e98:	9305      	str	r3, [sp, #20]
 8000e9a:	4619      	mov	r1, r3
 8000e9c:	f04f 0c0a 	mov.w	ip, #10
 8000ea0:	4620      	mov	r0, r4
 8000ea2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ea6:	3a30      	subs	r2, #48	; 0x30
 8000ea8:	2a09      	cmp	r2, #9
 8000eaa:	d903      	bls.n	8000eb4 <_vfiprintf_r+0x1d0>
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	d0c6      	beq.n	8000e3e <_vfiprintf_r+0x15a>
 8000eb0:	9105      	str	r1, [sp, #20]
 8000eb2:	e7c4      	b.n	8000e3e <_vfiprintf_r+0x15a>
 8000eb4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000eb8:	4604      	mov	r4, r0
 8000eba:	2301      	movs	r3, #1
 8000ebc:	e7f0      	b.n	8000ea0 <_vfiprintf_r+0x1bc>
 8000ebe:	ab03      	add	r3, sp, #12
 8000ec0:	9300      	str	r3, [sp, #0]
 8000ec2:	462a      	mov	r2, r5
 8000ec4:	4b12      	ldr	r3, [pc, #72]	; (8000f10 <_vfiprintf_r+0x22c>)
 8000ec6:	a904      	add	r1, sp, #16
 8000ec8:	4630      	mov	r0, r6
 8000eca:	f3af 8000 	nop.w
 8000ece:	4607      	mov	r7, r0
 8000ed0:	1c78      	adds	r0, r7, #1
 8000ed2:	d1d6      	bne.n	8000e82 <_vfiprintf_r+0x19e>
 8000ed4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ed6:	07d9      	lsls	r1, r3, #31
 8000ed8:	d405      	bmi.n	8000ee6 <_vfiprintf_r+0x202>
 8000eda:	89ab      	ldrh	r3, [r5, #12]
 8000edc:	059a      	lsls	r2, r3, #22
 8000ede:	d402      	bmi.n	8000ee6 <_vfiprintf_r+0x202>
 8000ee0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ee2:	f7ff fddb 	bl	8000a9c <__retarget_lock_release_recursive>
 8000ee6:	89ab      	ldrh	r3, [r5, #12]
 8000ee8:	065b      	lsls	r3, r3, #25
 8000eea:	f53f af1d 	bmi.w	8000d28 <_vfiprintf_r+0x44>
 8000eee:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ef0:	e71c      	b.n	8000d2c <_vfiprintf_r+0x48>
 8000ef2:	ab03      	add	r3, sp, #12
 8000ef4:	9300      	str	r3, [sp, #0]
 8000ef6:	462a      	mov	r2, r5
 8000ef8:	4b05      	ldr	r3, [pc, #20]	; (8000f10 <_vfiprintf_r+0x22c>)
 8000efa:	a904      	add	r1, sp, #16
 8000efc:	4630      	mov	r0, r6
 8000efe:	f000 f879 	bl	8000ff4 <_printf_i>
 8000f02:	e7e4      	b.n	8000ece <_vfiprintf_r+0x1ea>
 8000f04:	08001544 	.word	0x08001544
 8000f08:	0800154e 	.word	0x0800154e
 8000f0c:	00000000 	.word	0x00000000
 8000f10:	08000cbf 	.word	0x08000cbf
 8000f14:	0800154a 	.word	0x0800154a

08000f18 <_printf_common>:
 8000f18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f1c:	4616      	mov	r6, r2
 8000f1e:	4699      	mov	r9, r3
 8000f20:	688a      	ldr	r2, [r1, #8]
 8000f22:	690b      	ldr	r3, [r1, #16]
 8000f24:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f28:	4293      	cmp	r3, r2
 8000f2a:	bfb8      	it	lt
 8000f2c:	4613      	movlt	r3, r2
 8000f2e:	6033      	str	r3, [r6, #0]
 8000f30:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f34:	4607      	mov	r7, r0
 8000f36:	460c      	mov	r4, r1
 8000f38:	b10a      	cbz	r2, 8000f3e <_printf_common+0x26>
 8000f3a:	3301      	adds	r3, #1
 8000f3c:	6033      	str	r3, [r6, #0]
 8000f3e:	6823      	ldr	r3, [r4, #0]
 8000f40:	0699      	lsls	r1, r3, #26
 8000f42:	bf42      	ittt	mi
 8000f44:	6833      	ldrmi	r3, [r6, #0]
 8000f46:	3302      	addmi	r3, #2
 8000f48:	6033      	strmi	r3, [r6, #0]
 8000f4a:	6825      	ldr	r5, [r4, #0]
 8000f4c:	f015 0506 	ands.w	r5, r5, #6
 8000f50:	d106      	bne.n	8000f60 <_printf_common+0x48>
 8000f52:	f104 0a19 	add.w	sl, r4, #25
 8000f56:	68e3      	ldr	r3, [r4, #12]
 8000f58:	6832      	ldr	r2, [r6, #0]
 8000f5a:	1a9b      	subs	r3, r3, r2
 8000f5c:	42ab      	cmp	r3, r5
 8000f5e:	dc26      	bgt.n	8000fae <_printf_common+0x96>
 8000f60:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f64:	1e13      	subs	r3, r2, #0
 8000f66:	6822      	ldr	r2, [r4, #0]
 8000f68:	bf18      	it	ne
 8000f6a:	2301      	movne	r3, #1
 8000f6c:	0692      	lsls	r2, r2, #26
 8000f6e:	d42b      	bmi.n	8000fc8 <_printf_common+0xb0>
 8000f70:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f74:	4649      	mov	r1, r9
 8000f76:	4638      	mov	r0, r7
 8000f78:	47c0      	blx	r8
 8000f7a:	3001      	adds	r0, #1
 8000f7c:	d01e      	beq.n	8000fbc <_printf_common+0xa4>
 8000f7e:	6823      	ldr	r3, [r4, #0]
 8000f80:	6922      	ldr	r2, [r4, #16]
 8000f82:	f003 0306 	and.w	r3, r3, #6
 8000f86:	2b04      	cmp	r3, #4
 8000f88:	bf02      	ittt	eq
 8000f8a:	68e5      	ldreq	r5, [r4, #12]
 8000f8c:	6833      	ldreq	r3, [r6, #0]
 8000f8e:	1aed      	subeq	r5, r5, r3
 8000f90:	68a3      	ldr	r3, [r4, #8]
 8000f92:	bf0c      	ite	eq
 8000f94:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f98:	2500      	movne	r5, #0
 8000f9a:	4293      	cmp	r3, r2
 8000f9c:	bfc4      	itt	gt
 8000f9e:	1a9b      	subgt	r3, r3, r2
 8000fa0:	18ed      	addgt	r5, r5, r3
 8000fa2:	2600      	movs	r6, #0
 8000fa4:	341a      	adds	r4, #26
 8000fa6:	42b5      	cmp	r5, r6
 8000fa8:	d11a      	bne.n	8000fe0 <_printf_common+0xc8>
 8000faa:	2000      	movs	r0, #0
 8000fac:	e008      	b.n	8000fc0 <_printf_common+0xa8>
 8000fae:	2301      	movs	r3, #1
 8000fb0:	4652      	mov	r2, sl
 8000fb2:	4649      	mov	r1, r9
 8000fb4:	4638      	mov	r0, r7
 8000fb6:	47c0      	blx	r8
 8000fb8:	3001      	adds	r0, #1
 8000fba:	d103      	bne.n	8000fc4 <_printf_common+0xac>
 8000fbc:	f04f 30ff 	mov.w	r0, #4294967295
 8000fc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fc4:	3501      	adds	r5, #1
 8000fc6:	e7c6      	b.n	8000f56 <_printf_common+0x3e>
 8000fc8:	18e1      	adds	r1, r4, r3
 8000fca:	1c5a      	adds	r2, r3, #1
 8000fcc:	2030      	movs	r0, #48	; 0x30
 8000fce:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000fd2:	4422      	add	r2, r4
 8000fd4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000fd8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000fdc:	3302      	adds	r3, #2
 8000fde:	e7c7      	b.n	8000f70 <_printf_common+0x58>
 8000fe0:	2301      	movs	r3, #1
 8000fe2:	4622      	mov	r2, r4
 8000fe4:	4649      	mov	r1, r9
 8000fe6:	4638      	mov	r0, r7
 8000fe8:	47c0      	blx	r8
 8000fea:	3001      	adds	r0, #1
 8000fec:	d0e6      	beq.n	8000fbc <_printf_common+0xa4>
 8000fee:	3601      	adds	r6, #1
 8000ff0:	e7d9      	b.n	8000fa6 <_printf_common+0x8e>
	...

08000ff4 <_printf_i>:
 8000ff4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ff8:	7e0f      	ldrb	r7, [r1, #24]
 8000ffa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000ffc:	2f78      	cmp	r7, #120	; 0x78
 8000ffe:	4691      	mov	r9, r2
 8001000:	4680      	mov	r8, r0
 8001002:	460c      	mov	r4, r1
 8001004:	469a      	mov	sl, r3
 8001006:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800100a:	d807      	bhi.n	800101c <_printf_i+0x28>
 800100c:	2f62      	cmp	r7, #98	; 0x62
 800100e:	d80a      	bhi.n	8001026 <_printf_i+0x32>
 8001010:	2f00      	cmp	r7, #0
 8001012:	f000 80d4 	beq.w	80011be <_printf_i+0x1ca>
 8001016:	2f58      	cmp	r7, #88	; 0x58
 8001018:	f000 80c0 	beq.w	800119c <_printf_i+0x1a8>
 800101c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001020:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001024:	e03a      	b.n	800109c <_printf_i+0xa8>
 8001026:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800102a:	2b15      	cmp	r3, #21
 800102c:	d8f6      	bhi.n	800101c <_printf_i+0x28>
 800102e:	a101      	add	r1, pc, #4	; (adr r1, 8001034 <_printf_i+0x40>)
 8001030:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001034:	0800108d 	.word	0x0800108d
 8001038:	080010a1 	.word	0x080010a1
 800103c:	0800101d 	.word	0x0800101d
 8001040:	0800101d 	.word	0x0800101d
 8001044:	0800101d 	.word	0x0800101d
 8001048:	0800101d 	.word	0x0800101d
 800104c:	080010a1 	.word	0x080010a1
 8001050:	0800101d 	.word	0x0800101d
 8001054:	0800101d 	.word	0x0800101d
 8001058:	0800101d 	.word	0x0800101d
 800105c:	0800101d 	.word	0x0800101d
 8001060:	080011a5 	.word	0x080011a5
 8001064:	080010cd 	.word	0x080010cd
 8001068:	0800115f 	.word	0x0800115f
 800106c:	0800101d 	.word	0x0800101d
 8001070:	0800101d 	.word	0x0800101d
 8001074:	080011c7 	.word	0x080011c7
 8001078:	0800101d 	.word	0x0800101d
 800107c:	080010cd 	.word	0x080010cd
 8001080:	0800101d 	.word	0x0800101d
 8001084:	0800101d 	.word	0x0800101d
 8001088:	08001167 	.word	0x08001167
 800108c:	682b      	ldr	r3, [r5, #0]
 800108e:	1d1a      	adds	r2, r3, #4
 8001090:	681b      	ldr	r3, [r3, #0]
 8001092:	602a      	str	r2, [r5, #0]
 8001094:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001098:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800109c:	2301      	movs	r3, #1
 800109e:	e09f      	b.n	80011e0 <_printf_i+0x1ec>
 80010a0:	6820      	ldr	r0, [r4, #0]
 80010a2:	682b      	ldr	r3, [r5, #0]
 80010a4:	0607      	lsls	r7, r0, #24
 80010a6:	f103 0104 	add.w	r1, r3, #4
 80010aa:	6029      	str	r1, [r5, #0]
 80010ac:	d501      	bpl.n	80010b2 <_printf_i+0xbe>
 80010ae:	681e      	ldr	r6, [r3, #0]
 80010b0:	e003      	b.n	80010ba <_printf_i+0xc6>
 80010b2:	0646      	lsls	r6, r0, #25
 80010b4:	d5fb      	bpl.n	80010ae <_printf_i+0xba>
 80010b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80010ba:	2e00      	cmp	r6, #0
 80010bc:	da03      	bge.n	80010c6 <_printf_i+0xd2>
 80010be:	232d      	movs	r3, #45	; 0x2d
 80010c0:	4276      	negs	r6, r6
 80010c2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010c6:	485a      	ldr	r0, [pc, #360]	; (8001230 <_printf_i+0x23c>)
 80010c8:	230a      	movs	r3, #10
 80010ca:	e012      	b.n	80010f2 <_printf_i+0xfe>
 80010cc:	682b      	ldr	r3, [r5, #0]
 80010ce:	6820      	ldr	r0, [r4, #0]
 80010d0:	1d19      	adds	r1, r3, #4
 80010d2:	6029      	str	r1, [r5, #0]
 80010d4:	0605      	lsls	r5, r0, #24
 80010d6:	d501      	bpl.n	80010dc <_printf_i+0xe8>
 80010d8:	681e      	ldr	r6, [r3, #0]
 80010da:	e002      	b.n	80010e2 <_printf_i+0xee>
 80010dc:	0641      	lsls	r1, r0, #25
 80010de:	d5fb      	bpl.n	80010d8 <_printf_i+0xe4>
 80010e0:	881e      	ldrh	r6, [r3, #0]
 80010e2:	4853      	ldr	r0, [pc, #332]	; (8001230 <_printf_i+0x23c>)
 80010e4:	2f6f      	cmp	r7, #111	; 0x6f
 80010e6:	bf0c      	ite	eq
 80010e8:	2308      	moveq	r3, #8
 80010ea:	230a      	movne	r3, #10
 80010ec:	2100      	movs	r1, #0
 80010ee:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010f2:	6865      	ldr	r5, [r4, #4]
 80010f4:	60a5      	str	r5, [r4, #8]
 80010f6:	2d00      	cmp	r5, #0
 80010f8:	bfa2      	ittt	ge
 80010fa:	6821      	ldrge	r1, [r4, #0]
 80010fc:	f021 0104 	bicge.w	r1, r1, #4
 8001100:	6021      	strge	r1, [r4, #0]
 8001102:	b90e      	cbnz	r6, 8001108 <_printf_i+0x114>
 8001104:	2d00      	cmp	r5, #0
 8001106:	d04b      	beq.n	80011a0 <_printf_i+0x1ac>
 8001108:	4615      	mov	r5, r2
 800110a:	fbb6 f1f3 	udiv	r1, r6, r3
 800110e:	fb03 6711 	mls	r7, r3, r1, r6
 8001112:	5dc7      	ldrb	r7, [r0, r7]
 8001114:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001118:	4637      	mov	r7, r6
 800111a:	42bb      	cmp	r3, r7
 800111c:	460e      	mov	r6, r1
 800111e:	d9f4      	bls.n	800110a <_printf_i+0x116>
 8001120:	2b08      	cmp	r3, #8
 8001122:	d10b      	bne.n	800113c <_printf_i+0x148>
 8001124:	6823      	ldr	r3, [r4, #0]
 8001126:	07de      	lsls	r6, r3, #31
 8001128:	d508      	bpl.n	800113c <_printf_i+0x148>
 800112a:	6923      	ldr	r3, [r4, #16]
 800112c:	6861      	ldr	r1, [r4, #4]
 800112e:	4299      	cmp	r1, r3
 8001130:	bfde      	ittt	le
 8001132:	2330      	movle	r3, #48	; 0x30
 8001134:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001138:	f105 35ff 	addle.w	r5, r5, #4294967295
 800113c:	1b52      	subs	r2, r2, r5
 800113e:	6122      	str	r2, [r4, #16]
 8001140:	f8cd a000 	str.w	sl, [sp]
 8001144:	464b      	mov	r3, r9
 8001146:	aa03      	add	r2, sp, #12
 8001148:	4621      	mov	r1, r4
 800114a:	4640      	mov	r0, r8
 800114c:	f7ff fee4 	bl	8000f18 <_printf_common>
 8001150:	3001      	adds	r0, #1
 8001152:	d14a      	bne.n	80011ea <_printf_i+0x1f6>
 8001154:	f04f 30ff 	mov.w	r0, #4294967295
 8001158:	b004      	add	sp, #16
 800115a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800115e:	6823      	ldr	r3, [r4, #0]
 8001160:	f043 0320 	orr.w	r3, r3, #32
 8001164:	6023      	str	r3, [r4, #0]
 8001166:	4833      	ldr	r0, [pc, #204]	; (8001234 <_printf_i+0x240>)
 8001168:	2778      	movs	r7, #120	; 0x78
 800116a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800116e:	6823      	ldr	r3, [r4, #0]
 8001170:	6829      	ldr	r1, [r5, #0]
 8001172:	061f      	lsls	r7, r3, #24
 8001174:	f851 6b04 	ldr.w	r6, [r1], #4
 8001178:	d402      	bmi.n	8001180 <_printf_i+0x18c>
 800117a:	065f      	lsls	r7, r3, #25
 800117c:	bf48      	it	mi
 800117e:	b2b6      	uxthmi	r6, r6
 8001180:	07df      	lsls	r7, r3, #31
 8001182:	bf48      	it	mi
 8001184:	f043 0320 	orrmi.w	r3, r3, #32
 8001188:	6029      	str	r1, [r5, #0]
 800118a:	bf48      	it	mi
 800118c:	6023      	strmi	r3, [r4, #0]
 800118e:	b91e      	cbnz	r6, 8001198 <_printf_i+0x1a4>
 8001190:	6823      	ldr	r3, [r4, #0]
 8001192:	f023 0320 	bic.w	r3, r3, #32
 8001196:	6023      	str	r3, [r4, #0]
 8001198:	2310      	movs	r3, #16
 800119a:	e7a7      	b.n	80010ec <_printf_i+0xf8>
 800119c:	4824      	ldr	r0, [pc, #144]	; (8001230 <_printf_i+0x23c>)
 800119e:	e7e4      	b.n	800116a <_printf_i+0x176>
 80011a0:	4615      	mov	r5, r2
 80011a2:	e7bd      	b.n	8001120 <_printf_i+0x12c>
 80011a4:	682b      	ldr	r3, [r5, #0]
 80011a6:	6826      	ldr	r6, [r4, #0]
 80011a8:	6961      	ldr	r1, [r4, #20]
 80011aa:	1d18      	adds	r0, r3, #4
 80011ac:	6028      	str	r0, [r5, #0]
 80011ae:	0635      	lsls	r5, r6, #24
 80011b0:	681b      	ldr	r3, [r3, #0]
 80011b2:	d501      	bpl.n	80011b8 <_printf_i+0x1c4>
 80011b4:	6019      	str	r1, [r3, #0]
 80011b6:	e002      	b.n	80011be <_printf_i+0x1ca>
 80011b8:	0670      	lsls	r0, r6, #25
 80011ba:	d5fb      	bpl.n	80011b4 <_printf_i+0x1c0>
 80011bc:	8019      	strh	r1, [r3, #0]
 80011be:	2300      	movs	r3, #0
 80011c0:	6123      	str	r3, [r4, #16]
 80011c2:	4615      	mov	r5, r2
 80011c4:	e7bc      	b.n	8001140 <_printf_i+0x14c>
 80011c6:	682b      	ldr	r3, [r5, #0]
 80011c8:	1d1a      	adds	r2, r3, #4
 80011ca:	602a      	str	r2, [r5, #0]
 80011cc:	681d      	ldr	r5, [r3, #0]
 80011ce:	6862      	ldr	r2, [r4, #4]
 80011d0:	2100      	movs	r1, #0
 80011d2:	4628      	mov	r0, r5
 80011d4:	f7fe fffc 	bl	80001d0 <memchr>
 80011d8:	b108      	cbz	r0, 80011de <_printf_i+0x1ea>
 80011da:	1b40      	subs	r0, r0, r5
 80011dc:	6060      	str	r0, [r4, #4]
 80011de:	6863      	ldr	r3, [r4, #4]
 80011e0:	6123      	str	r3, [r4, #16]
 80011e2:	2300      	movs	r3, #0
 80011e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011e8:	e7aa      	b.n	8001140 <_printf_i+0x14c>
 80011ea:	6923      	ldr	r3, [r4, #16]
 80011ec:	462a      	mov	r2, r5
 80011ee:	4649      	mov	r1, r9
 80011f0:	4640      	mov	r0, r8
 80011f2:	47d0      	blx	sl
 80011f4:	3001      	adds	r0, #1
 80011f6:	d0ad      	beq.n	8001154 <_printf_i+0x160>
 80011f8:	6823      	ldr	r3, [r4, #0]
 80011fa:	079b      	lsls	r3, r3, #30
 80011fc:	d413      	bmi.n	8001226 <_printf_i+0x232>
 80011fe:	68e0      	ldr	r0, [r4, #12]
 8001200:	9b03      	ldr	r3, [sp, #12]
 8001202:	4298      	cmp	r0, r3
 8001204:	bfb8      	it	lt
 8001206:	4618      	movlt	r0, r3
 8001208:	e7a6      	b.n	8001158 <_printf_i+0x164>
 800120a:	2301      	movs	r3, #1
 800120c:	4632      	mov	r2, r6
 800120e:	4649      	mov	r1, r9
 8001210:	4640      	mov	r0, r8
 8001212:	47d0      	blx	sl
 8001214:	3001      	adds	r0, #1
 8001216:	d09d      	beq.n	8001154 <_printf_i+0x160>
 8001218:	3501      	adds	r5, #1
 800121a:	68e3      	ldr	r3, [r4, #12]
 800121c:	9903      	ldr	r1, [sp, #12]
 800121e:	1a5b      	subs	r3, r3, r1
 8001220:	42ab      	cmp	r3, r5
 8001222:	dcf2      	bgt.n	800120a <_printf_i+0x216>
 8001224:	e7eb      	b.n	80011fe <_printf_i+0x20a>
 8001226:	2500      	movs	r5, #0
 8001228:	f104 0619 	add.w	r6, r4, #25
 800122c:	e7f5      	b.n	800121a <_printf_i+0x226>
 800122e:	bf00      	nop
 8001230:	08001555 	.word	0x08001555
 8001234:	08001566 	.word	0x08001566

08001238 <__sflush_r>:
 8001238:	898a      	ldrh	r2, [r1, #12]
 800123a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800123e:	4605      	mov	r5, r0
 8001240:	0710      	lsls	r0, r2, #28
 8001242:	460c      	mov	r4, r1
 8001244:	d458      	bmi.n	80012f8 <__sflush_r+0xc0>
 8001246:	684b      	ldr	r3, [r1, #4]
 8001248:	2b00      	cmp	r3, #0
 800124a:	dc05      	bgt.n	8001258 <__sflush_r+0x20>
 800124c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800124e:	2b00      	cmp	r3, #0
 8001250:	dc02      	bgt.n	8001258 <__sflush_r+0x20>
 8001252:	2000      	movs	r0, #0
 8001254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001258:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800125a:	2e00      	cmp	r6, #0
 800125c:	d0f9      	beq.n	8001252 <__sflush_r+0x1a>
 800125e:	2300      	movs	r3, #0
 8001260:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001264:	682f      	ldr	r7, [r5, #0]
 8001266:	6a21      	ldr	r1, [r4, #32]
 8001268:	602b      	str	r3, [r5, #0]
 800126a:	d032      	beq.n	80012d2 <__sflush_r+0x9a>
 800126c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800126e:	89a3      	ldrh	r3, [r4, #12]
 8001270:	075a      	lsls	r2, r3, #29
 8001272:	d505      	bpl.n	8001280 <__sflush_r+0x48>
 8001274:	6863      	ldr	r3, [r4, #4]
 8001276:	1ac0      	subs	r0, r0, r3
 8001278:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800127a:	b10b      	cbz	r3, 8001280 <__sflush_r+0x48>
 800127c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800127e:	1ac0      	subs	r0, r0, r3
 8001280:	2300      	movs	r3, #0
 8001282:	4602      	mov	r2, r0
 8001284:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001286:	6a21      	ldr	r1, [r4, #32]
 8001288:	4628      	mov	r0, r5
 800128a:	47b0      	blx	r6
 800128c:	1c43      	adds	r3, r0, #1
 800128e:	89a3      	ldrh	r3, [r4, #12]
 8001290:	d106      	bne.n	80012a0 <__sflush_r+0x68>
 8001292:	6829      	ldr	r1, [r5, #0]
 8001294:	291d      	cmp	r1, #29
 8001296:	d82b      	bhi.n	80012f0 <__sflush_r+0xb8>
 8001298:	4a29      	ldr	r2, [pc, #164]	; (8001340 <__sflush_r+0x108>)
 800129a:	410a      	asrs	r2, r1
 800129c:	07d6      	lsls	r6, r2, #31
 800129e:	d427      	bmi.n	80012f0 <__sflush_r+0xb8>
 80012a0:	2200      	movs	r2, #0
 80012a2:	6062      	str	r2, [r4, #4]
 80012a4:	04d9      	lsls	r1, r3, #19
 80012a6:	6922      	ldr	r2, [r4, #16]
 80012a8:	6022      	str	r2, [r4, #0]
 80012aa:	d504      	bpl.n	80012b6 <__sflush_r+0x7e>
 80012ac:	1c42      	adds	r2, r0, #1
 80012ae:	d101      	bne.n	80012b4 <__sflush_r+0x7c>
 80012b0:	682b      	ldr	r3, [r5, #0]
 80012b2:	b903      	cbnz	r3, 80012b6 <__sflush_r+0x7e>
 80012b4:	6560      	str	r0, [r4, #84]	; 0x54
 80012b6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012b8:	602f      	str	r7, [r5, #0]
 80012ba:	2900      	cmp	r1, #0
 80012bc:	d0c9      	beq.n	8001252 <__sflush_r+0x1a>
 80012be:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012c2:	4299      	cmp	r1, r3
 80012c4:	d002      	beq.n	80012cc <__sflush_r+0x94>
 80012c6:	4628      	mov	r0, r5
 80012c8:	f7ff fbea 	bl	8000aa0 <_free_r>
 80012cc:	2000      	movs	r0, #0
 80012ce:	6360      	str	r0, [r4, #52]	; 0x34
 80012d0:	e7c0      	b.n	8001254 <__sflush_r+0x1c>
 80012d2:	2301      	movs	r3, #1
 80012d4:	4628      	mov	r0, r5
 80012d6:	47b0      	blx	r6
 80012d8:	1c41      	adds	r1, r0, #1
 80012da:	d1c8      	bne.n	800126e <__sflush_r+0x36>
 80012dc:	682b      	ldr	r3, [r5, #0]
 80012de:	2b00      	cmp	r3, #0
 80012e0:	d0c5      	beq.n	800126e <__sflush_r+0x36>
 80012e2:	2b1d      	cmp	r3, #29
 80012e4:	d001      	beq.n	80012ea <__sflush_r+0xb2>
 80012e6:	2b16      	cmp	r3, #22
 80012e8:	d101      	bne.n	80012ee <__sflush_r+0xb6>
 80012ea:	602f      	str	r7, [r5, #0]
 80012ec:	e7b1      	b.n	8001252 <__sflush_r+0x1a>
 80012ee:	89a3      	ldrh	r3, [r4, #12]
 80012f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012f4:	81a3      	strh	r3, [r4, #12]
 80012f6:	e7ad      	b.n	8001254 <__sflush_r+0x1c>
 80012f8:	690f      	ldr	r7, [r1, #16]
 80012fa:	2f00      	cmp	r7, #0
 80012fc:	d0a9      	beq.n	8001252 <__sflush_r+0x1a>
 80012fe:	0793      	lsls	r3, r2, #30
 8001300:	680e      	ldr	r6, [r1, #0]
 8001302:	bf08      	it	eq
 8001304:	694b      	ldreq	r3, [r1, #20]
 8001306:	600f      	str	r7, [r1, #0]
 8001308:	bf18      	it	ne
 800130a:	2300      	movne	r3, #0
 800130c:	eba6 0807 	sub.w	r8, r6, r7
 8001310:	608b      	str	r3, [r1, #8]
 8001312:	f1b8 0f00 	cmp.w	r8, #0
 8001316:	dd9c      	ble.n	8001252 <__sflush_r+0x1a>
 8001318:	6a21      	ldr	r1, [r4, #32]
 800131a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800131c:	4643      	mov	r3, r8
 800131e:	463a      	mov	r2, r7
 8001320:	4628      	mov	r0, r5
 8001322:	47b0      	blx	r6
 8001324:	2800      	cmp	r0, #0
 8001326:	dc06      	bgt.n	8001336 <__sflush_r+0xfe>
 8001328:	89a3      	ldrh	r3, [r4, #12]
 800132a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800132e:	81a3      	strh	r3, [r4, #12]
 8001330:	f04f 30ff 	mov.w	r0, #4294967295
 8001334:	e78e      	b.n	8001254 <__sflush_r+0x1c>
 8001336:	4407      	add	r7, r0
 8001338:	eba8 0800 	sub.w	r8, r8, r0
 800133c:	e7e9      	b.n	8001312 <__sflush_r+0xda>
 800133e:	bf00      	nop
 8001340:	dfbffffe 	.word	0xdfbffffe

08001344 <_fflush_r>:
 8001344:	b538      	push	{r3, r4, r5, lr}
 8001346:	690b      	ldr	r3, [r1, #16]
 8001348:	4605      	mov	r5, r0
 800134a:	460c      	mov	r4, r1
 800134c:	b913      	cbnz	r3, 8001354 <_fflush_r+0x10>
 800134e:	2500      	movs	r5, #0
 8001350:	4628      	mov	r0, r5
 8001352:	bd38      	pop	{r3, r4, r5, pc}
 8001354:	b118      	cbz	r0, 800135e <_fflush_r+0x1a>
 8001356:	6a03      	ldr	r3, [r0, #32]
 8001358:	b90b      	cbnz	r3, 800135e <_fflush_r+0x1a>
 800135a:	f7ff f9a9 	bl	80006b0 <__sinit>
 800135e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001362:	2b00      	cmp	r3, #0
 8001364:	d0f3      	beq.n	800134e <_fflush_r+0xa>
 8001366:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001368:	07d0      	lsls	r0, r2, #31
 800136a:	d404      	bmi.n	8001376 <_fflush_r+0x32>
 800136c:	0599      	lsls	r1, r3, #22
 800136e:	d402      	bmi.n	8001376 <_fflush_r+0x32>
 8001370:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001372:	f7ff fb92 	bl	8000a9a <__retarget_lock_acquire_recursive>
 8001376:	4628      	mov	r0, r5
 8001378:	4621      	mov	r1, r4
 800137a:	f7ff ff5d 	bl	8001238 <__sflush_r>
 800137e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001380:	07da      	lsls	r2, r3, #31
 8001382:	4605      	mov	r5, r0
 8001384:	d4e4      	bmi.n	8001350 <_fflush_r+0xc>
 8001386:	89a3      	ldrh	r3, [r4, #12]
 8001388:	059b      	lsls	r3, r3, #22
 800138a:	d4e1      	bmi.n	8001350 <_fflush_r+0xc>
 800138c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800138e:	f7ff fb85 	bl	8000a9c <__retarget_lock_release_recursive>
 8001392:	e7dd      	b.n	8001350 <_fflush_r+0xc>

08001394 <__swhatbuf_r>:
 8001394:	b570      	push	{r4, r5, r6, lr}
 8001396:	460c      	mov	r4, r1
 8001398:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800139c:	2900      	cmp	r1, #0
 800139e:	b096      	sub	sp, #88	; 0x58
 80013a0:	4615      	mov	r5, r2
 80013a2:	461e      	mov	r6, r3
 80013a4:	da0d      	bge.n	80013c2 <__swhatbuf_r+0x2e>
 80013a6:	89a3      	ldrh	r3, [r4, #12]
 80013a8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80013ac:	f04f 0100 	mov.w	r1, #0
 80013b0:	bf0c      	ite	eq
 80013b2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80013b6:	2340      	movne	r3, #64	; 0x40
 80013b8:	2000      	movs	r0, #0
 80013ba:	6031      	str	r1, [r6, #0]
 80013bc:	602b      	str	r3, [r5, #0]
 80013be:	b016      	add	sp, #88	; 0x58
 80013c0:	bd70      	pop	{r4, r5, r6, pc}
 80013c2:	466a      	mov	r2, sp
 80013c4:	f000 f848 	bl	8001458 <_fstat_r>
 80013c8:	2800      	cmp	r0, #0
 80013ca:	dbec      	blt.n	80013a6 <__swhatbuf_r+0x12>
 80013cc:	9901      	ldr	r1, [sp, #4]
 80013ce:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80013d2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80013d6:	4259      	negs	r1, r3
 80013d8:	4159      	adcs	r1, r3
 80013da:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013de:	e7eb      	b.n	80013b8 <__swhatbuf_r+0x24>

080013e0 <__smakebuf_r>:
 80013e0:	898b      	ldrh	r3, [r1, #12]
 80013e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013e4:	079d      	lsls	r5, r3, #30
 80013e6:	4606      	mov	r6, r0
 80013e8:	460c      	mov	r4, r1
 80013ea:	d507      	bpl.n	80013fc <__smakebuf_r+0x1c>
 80013ec:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013f0:	6023      	str	r3, [r4, #0]
 80013f2:	6123      	str	r3, [r4, #16]
 80013f4:	2301      	movs	r3, #1
 80013f6:	6163      	str	r3, [r4, #20]
 80013f8:	b002      	add	sp, #8
 80013fa:	bd70      	pop	{r4, r5, r6, pc}
 80013fc:	ab01      	add	r3, sp, #4
 80013fe:	466a      	mov	r2, sp
 8001400:	f7ff ffc8 	bl	8001394 <__swhatbuf_r>
 8001404:	9900      	ldr	r1, [sp, #0]
 8001406:	4605      	mov	r5, r0
 8001408:	4630      	mov	r0, r6
 800140a:	f7ff fbb5 	bl	8000b78 <_malloc_r>
 800140e:	b948      	cbnz	r0, 8001424 <__smakebuf_r+0x44>
 8001410:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001414:	059a      	lsls	r2, r3, #22
 8001416:	d4ef      	bmi.n	80013f8 <__smakebuf_r+0x18>
 8001418:	f023 0303 	bic.w	r3, r3, #3
 800141c:	f043 0302 	orr.w	r3, r3, #2
 8001420:	81a3      	strh	r3, [r4, #12]
 8001422:	e7e3      	b.n	80013ec <__smakebuf_r+0xc>
 8001424:	89a3      	ldrh	r3, [r4, #12]
 8001426:	6020      	str	r0, [r4, #0]
 8001428:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800142c:	81a3      	strh	r3, [r4, #12]
 800142e:	9b00      	ldr	r3, [sp, #0]
 8001430:	6163      	str	r3, [r4, #20]
 8001432:	9b01      	ldr	r3, [sp, #4]
 8001434:	6120      	str	r0, [r4, #16]
 8001436:	b15b      	cbz	r3, 8001450 <__smakebuf_r+0x70>
 8001438:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800143c:	4630      	mov	r0, r6
 800143e:	f000 f81d 	bl	800147c <_isatty_r>
 8001442:	b128      	cbz	r0, 8001450 <__smakebuf_r+0x70>
 8001444:	89a3      	ldrh	r3, [r4, #12]
 8001446:	f023 0303 	bic.w	r3, r3, #3
 800144a:	f043 0301 	orr.w	r3, r3, #1
 800144e:	81a3      	strh	r3, [r4, #12]
 8001450:	89a3      	ldrh	r3, [r4, #12]
 8001452:	431d      	orrs	r5, r3
 8001454:	81a5      	strh	r5, [r4, #12]
 8001456:	e7cf      	b.n	80013f8 <__smakebuf_r+0x18>

08001458 <_fstat_r>:
 8001458:	b538      	push	{r3, r4, r5, lr}
 800145a:	4d07      	ldr	r5, [pc, #28]	; (8001478 <_fstat_r+0x20>)
 800145c:	2300      	movs	r3, #0
 800145e:	4604      	mov	r4, r0
 8001460:	4608      	mov	r0, r1
 8001462:	4611      	mov	r1, r2
 8001464:	602b      	str	r3, [r5, #0]
 8001466:	f7ff f80e 	bl	8000486 <_fstat>
 800146a:	1c43      	adds	r3, r0, #1
 800146c:	d102      	bne.n	8001474 <_fstat_r+0x1c>
 800146e:	682b      	ldr	r3, [r5, #0]
 8001470:	b103      	cbz	r3, 8001474 <_fstat_r+0x1c>
 8001472:	6023      	str	r3, [r4, #0]
 8001474:	bd38      	pop	{r3, r4, r5, pc}
 8001476:	bf00      	nop
 8001478:	200001b8 	.word	0x200001b8

0800147c <_isatty_r>:
 800147c:	b538      	push	{r3, r4, r5, lr}
 800147e:	4d06      	ldr	r5, [pc, #24]	; (8001498 <_isatty_r+0x1c>)
 8001480:	2300      	movs	r3, #0
 8001482:	4604      	mov	r4, r0
 8001484:	4608      	mov	r0, r1
 8001486:	602b      	str	r3, [r5, #0]
 8001488:	f7ff f80d 	bl	80004a6 <_isatty>
 800148c:	1c43      	adds	r3, r0, #1
 800148e:	d102      	bne.n	8001496 <_isatty_r+0x1a>
 8001490:	682b      	ldr	r3, [r5, #0]
 8001492:	b103      	cbz	r3, 8001496 <_isatty_r+0x1a>
 8001494:	6023      	str	r3, [r4, #0]
 8001496:	bd38      	pop	{r3, r4, r5, pc}
 8001498:	200001b8 	.word	0x200001b8

0800149c <_sbrk_r>:
 800149c:	b538      	push	{r3, r4, r5, lr}
 800149e:	4d06      	ldr	r5, [pc, #24]	; (80014b8 <_sbrk_r+0x1c>)
 80014a0:	2300      	movs	r3, #0
 80014a2:	4604      	mov	r4, r0
 80014a4:	4608      	mov	r0, r1
 80014a6:	602b      	str	r3, [r5, #0]
 80014a8:	f7ff f816 	bl	80004d8 <_sbrk>
 80014ac:	1c43      	adds	r3, r0, #1
 80014ae:	d102      	bne.n	80014b6 <_sbrk_r+0x1a>
 80014b0:	682b      	ldr	r3, [r5, #0]
 80014b2:	b103      	cbz	r3, 80014b6 <_sbrk_r+0x1a>
 80014b4:	6023      	str	r3, [r4, #0]
 80014b6:	bd38      	pop	{r3, r4, r5, pc}
 80014b8:	200001b8 	.word	0x200001b8

080014bc <_init>:
 80014bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014be:	bf00      	nop
 80014c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014c2:	bc08      	pop	{r3}
 80014c4:	469e      	mov	lr, r3
 80014c6:	4770      	bx	lr

080014c8 <_fini>:
 80014c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014ca:	bf00      	nop
 80014cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ce:	bc08      	pop	{r3}
 80014d0:	469e      	mov	lr, r3
 80014d2:	4770      	bx	lr
